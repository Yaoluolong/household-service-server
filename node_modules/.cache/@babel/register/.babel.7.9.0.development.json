{
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const express = require('express'); //引入express框架\n\n\nconst router = require('./router'); //引入路由\n\n\nconst fs = require('fs'); //引入用于文件操作的组件\n\n\nconst https = require('https'); //引入用于搭建https服务的组件\n\n\nconst bodyParser = require('body-parser'); //引入用于解析request请求包的中间件\n\n\nconst cors = require('cors'); //引入用于解决跨域问题的中间件\n\n\nconst colors = require('colors'); //引入控制台颜色控制模块\n\n\nconst app = express();\napp.use(cors());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.use('/', router);\nconst privateKey = fs.readFileSync('https/3750007_yaoluolong.xyz.key', 'utf8');\nconst certificate = fs.readFileSync('https/3750007_yaoluolong.xyz.pem', 'utf8');\nconst credentials = {\n  key: privateKey,\n  cert: certificate\n};\nconst httpsServer = https.createServer(credentials, app);\nconst SSLPORT = 18082;\nhttpsServer.listen(SSLPORT, function () {\n  console.log('\\n' + '    --https服务器已启动' + ': https://localhost:%s'.blue + '\\n\\n', SSLPORT);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsImZzIiwiaHR0cHMiLCJib2R5UGFyc2VyIiwiY29ycyIsImNvbG9ycyIsImFwcCIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwcml2YXRlS2V5IiwicmVhZEZpbGVTeW5jIiwiY2VydGlmaWNhdGUiLCJjcmVkZW50aWFscyIsImtleSIsImNlcnQiLCJodHRwc1NlcnZlciIsImNyZWF0ZVNlcnZlciIsIlNTTFBPUlQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiYmx1ZSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2QixDLENBQXlDOzs7QUFDekMsTUFBTUMsTUFBTSxHQUFDRCxPQUFPLENBQUMsVUFBRCxDQUFwQixDLENBQXlDOzs7QUFDekMsTUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsSUFBRCxDQUFsQixDLENBQXlDOzs7QUFDekMsTUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFyQixDLENBQXlDOzs7QUFDekMsTUFBTUksVUFBVSxHQUFHSixPQUFPLENBQUMsYUFBRCxDQUExQixDLENBQXlDOzs7QUFDekMsTUFBTUssSUFBSSxHQUFDTCxPQUFPLENBQUMsTUFBRCxDQUFsQixDLENBQXlDOzs7QUFDekMsTUFBTU0sTUFBTSxHQUFDTixPQUFPLENBQUMsUUFBRCxDQUFwQixDLENBQXlDOzs7QUFFekMsTUFBTU8sR0FBRyxHQUFDUixPQUFPLEVBQWpCO0FBRUFRLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxJQUFJLEVBQVo7QUFDQUUsR0FBRyxDQUFDQyxHQUFKLENBQVFKLFVBQVUsQ0FBQ0ssVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRSixVQUFVLENBQUNPLElBQVgsRUFBUjtBQUNBSixHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQVlQLE1BQVo7QUFFQSxNQUFNVyxVQUFVLEdBQUdWLEVBQUUsQ0FBQ1csWUFBSCxDQUFnQixrQ0FBaEIsRUFBb0QsTUFBcEQsQ0FBbkI7QUFDQSxNQUFNQyxXQUFXLEdBQUdaLEVBQUUsQ0FBQ1csWUFBSCxDQUFnQixrQ0FBaEIsRUFBb0QsTUFBcEQsQ0FBcEI7QUFDQSxNQUFNRSxXQUFXLEdBQUc7QUFBRUMsRUFBQUEsR0FBRyxFQUFFSixVQUFQO0FBQW1CSyxFQUFBQSxJQUFJLEVBQUVIO0FBQXpCLENBQXBCO0FBQ0EsTUFBTUksV0FBVyxHQUFHZixLQUFLLENBQUNnQixZQUFOLENBQW1CSixXQUFuQixFQUFnQ1IsR0FBaEMsQ0FBcEI7QUFDQSxNQUFNYSxPQUFPLEdBQUcsS0FBaEI7QUFFQUYsV0FBVyxDQUFDRyxNQUFaLENBQW1CRCxPQUFuQixFQUE0QixZQUFXO0FBQ3JDRSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFLLG1CQUFMLEdBQXlCLHlCQUF5QkMsSUFBbEQsR0FBdUQsTUFBbkUsRUFBMkVKLE9BQTNFO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiJHOlxcUHJvamVjdFxcV2ViXFxnaXRcXGhvdXNlaG9sZC1zZXJ2aWNlLXNlcnZlclxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpICAgICAgIC8v5byV5YWlZXhwcmVzc+ahhuaetlxuY29uc3Qgcm91dGVyPXJlcXVpcmUoJy4vcm91dGVyJykgICAgICAgICAvL+W8leWFpei3r+eUsVxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpICAgICAgICAgICAgICAgICAvL+W8leWFpeeUqOS6juaWh+S7tuaTjeS9nOeahOe7hOS7tlxuY29uc3QgaHR0cHMgPSByZXF1aXJlKCdodHRwcycpICAgICAgICAgICAvL+W8leWFpeeUqOS6juaQreW7umh0dHBz5pyN5Yqh55qE57uE5Lu2XG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKS8v5byV5YWl55So5LqO6Kej5p6QcmVxdWVzdOivt+axguWMheeahOS4remXtOS7tlxuY29uc3QgY29ycz1yZXF1aXJlKCdjb3JzJykgICAgICAgICAgICAgICAvL+W8leWFpeeUqOS6juino+WGs+i3qOWfn+mXrumimOeahOS4remXtOS7tlxuY29uc3QgY29sb3JzPXJlcXVpcmUoJ2NvbG9ycycpICAgICAgICAgICAvL+W8leWFpeaOp+WItuWPsOminOiJsuaOp+WItuaooeWdl1xuXG5jb25zdCBhcHA9ZXhwcmVzcygpXG5cbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuYXBwLnVzZSgnLycscm91dGVyKVxuXG5jb25zdCBwcml2YXRlS2V5ID0gZnMucmVhZEZpbGVTeW5jKCdodHRwcy8zNzUwMDA3X3lhb2x1b2xvbmcueHl6LmtleScsICd1dGY4JylcbmNvbnN0IGNlcnRpZmljYXRlID0gZnMucmVhZEZpbGVTeW5jKCdodHRwcy8zNzUwMDA3X3lhb2x1b2xvbmcueHl6LnBlbScsICd1dGY4JylcbmNvbnN0IGNyZWRlbnRpYWxzID0geyBrZXk6IHByaXZhdGVLZXksIGNlcnQ6IGNlcnRpZmljYXRlIH1cbmNvbnN0IGh0dHBzU2VydmVyID0gaHR0cHMuY3JlYXRlU2VydmVyKGNyZWRlbnRpYWxzLCBhcHApXG5jb25zdCBTU0xQT1JUID0gMTgwODJcblxuaHR0cHNTZXJ2ZXIubGlzdGVuKFNTTFBPUlQsIGZ1bmN0aW9uKCkge1xuICBjb25zb2xlLmxvZygnXFxuJysnICAgIC0taHR0cHPmnI3liqHlmajlt7LlkK/liqgnKyc6IGh0dHBzOi8vbG9jYWxob3N0OiVzJy5ibHVlKydcXG5cXG4nLCBTU0xQT1JUKVxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "fs",
        "https",
        "bodyParser",
        "cors",
        "colors",
        "app",
        "use",
        "urlencoded",
        "extended",
        "json",
        "privateKey",
        "readFileSync",
        "certificate",
        "credentials",
        "key",
        "cert",
        "httpsServer",
        "createServer",
        "SSLPORT",
        "listen",
        "console",
        "log",
        "blue"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CAAyC;;;AACzC,MAAMC,MAAM,GAACD,OAAO,CAAC,UAAD,CAApB,C,CAAyC;;;AACzC,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB,C,CAAyC;;;AACzC,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB,C,CAAyC;;;AACzC,MAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B,C,CAAyC;;;AACzC,MAAMK,IAAI,GAACL,OAAO,CAAC,MAAD,CAAlB,C,CAAyC;;;AACzC,MAAMM,MAAM,GAACN,OAAO,CAAC,QAAD,CAApB,C,CAAyC;;;AAEzC,MAAMO,GAAG,GAACR,OAAO,EAAjB;AAEAQ,GAAG,CAACC,GAAJ,CAAQH,IAAI,EAAZ;AACAE,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACK,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQJ,UAAU,CAACO,IAAX,EAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAYP,MAAZ;AAEA,MAAMW,UAAU,GAAGV,EAAE,CAACW,YAAH,CAAgB,kCAAhB,EAAoD,MAApD,CAAnB;AACA,MAAMC,WAAW,GAAGZ,EAAE,CAACW,YAAH,CAAgB,kCAAhB,EAAoD,MAApD,CAApB;AACA,MAAME,WAAW,GAAG;AAAEC,EAAAA,GAAG,EAAEJ,UAAP;AAAmBK,EAAAA,IAAI,EAAEH;AAAzB,CAApB;AACA,MAAMI,WAAW,GAAGf,KAAK,CAACgB,YAAN,CAAmBJ,WAAnB,EAAgCR,GAAhC,CAApB;AACA,MAAMa,OAAO,GAAG,KAAhB;AAEAF,WAAW,CAACG,MAAZ,CAAmBD,OAAnB,EAA4B,YAAW;AACrCE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAK,mBAAL,GAAyB,yBAAyBC,IAAlD,GAAuD,MAAnE,EAA2EJ,OAA3E;AACD,CAFD",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\",
      "sourcesContent": [
        "const express = require('express')       //引入express框架\nconst router=require('./router')         //引入路由\nconst fs = require('fs')                 //引入用于文件操作的组件\nconst https = require('https')           //引入用于搭建https服务的组件\nconst bodyParser = require('body-parser')//引入用于解析request请求包的中间件\nconst cors=require('cors')               //引入用于解决跨域问题的中间件\nconst colors=require('colors')           //引入控制台颜色控制模块\n\nconst app=express()\n\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(bodyParser.json())\napp.use('/',router)\n\nconst privateKey = fs.readFileSync('https/3750007_yaoluolong.xyz.key', 'utf8')\nconst certificate = fs.readFileSync('https/3750007_yaoluolong.xyz.pem', 'utf8')\nconst credentials = { key: privateKey, cert: certificate }\nconst httpsServer = https.createServer(credentials, app)\nconst SSLPORT = 18082\n\nhttpsServer.listen(SSLPORT, function() {\n  console.log('\\n'+'    --https服务器已启动'+': https://localhost:%s'.blue+'\\n\\n', SSLPORT)\n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1586762859518
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst boom = require('boom'); //引入用于处理404请求的中间件\n\n\nconst userRouter = require('./user');\n\nconst staffRouter = require('./staff');\n\nconst uploadRouter = require('./upload');\n\nconst classRouter = require('./class');\n\nconst commodityRouter = require('./commodity');\n\nconst {\n  jwtAuth\n} = require('./jwt');\n\nconst Result = require('../models/Result'); // 注册路由\n\n\nconst router = express.Router();\nrouter.use(jwtAuth);\nrouter.get('/', (req, res) => {\n  return res.send('Hello Household');\n});\nrouter.use('/user', userRouter);\nrouter.use('/staff', staffRouter);\nrouter.use('/upload', uploadRouter);\nrouter.use('/class', classRouter);\nrouter.use('/commodity', commodityRouter);\n/*\n  集中处理404请求的中间件\n */\n\nrouter.use((req, res, next) => {\n  next(boom.notFound('地址不存在'));\n});\n/*\n  自定义路由异常处理中间件\n */\n\nrouter.use((err, req, res, next) => {\n  if (err.name === 'UnauthorizedError') {\n    new Result(null, 'token失效', {\n      error: err.status,\n      errorMsg: err.name\n    }).expired(res.status(err.status));\n  } else {\n    const msg = err && err.message || '系统错误';\n    const statusCode = err.output && err.output.statusCode || 500;\n    const errorMsg = err.output && err.output.payload && err.output.payload.error || err.message;\n    new Result(null, msg, {\n      error: statusCode || status,\n      errorMsg\n    }).fail(res.status(statusCode));\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9vbSIsInVzZXJSb3V0ZXIiLCJzdGFmZlJvdXRlciIsInVwbG9hZFJvdXRlciIsImNsYXNzUm91dGVyIiwiY29tbW9kaXR5Um91dGVyIiwiand0QXV0aCIsIlJlc3VsdCIsInJvdXRlciIsIlJvdXRlciIsInVzZSIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJuZXh0Iiwibm90Rm91bmQiLCJlcnIiLCJuYW1lIiwiZXJyb3IiLCJzdGF0dXMiLCJlcnJvck1zZyIsImV4cGlyZWQiLCJtc2ciLCJtZXNzYWdlIiwic3RhdHVzQ29kZSIsIm91dHB1dCIsInBheWxvYWQiLCJmYWlsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCLEMsQ0FBc0M7OztBQUN0QyxNQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQTFCOztBQUNBLE1BQU1HLFdBQVcsR0FBR0gsT0FBTyxDQUFDLFNBQUQsQ0FBM0I7O0FBQ0EsTUFBTUksWUFBWSxHQUFDSixPQUFPLENBQUMsVUFBRCxDQUExQjs7QUFDQSxNQUFNSyxXQUFXLEdBQUdMLE9BQU8sQ0FBQyxTQUFELENBQTNCOztBQUNBLE1BQU1NLGVBQWUsR0FBR04sT0FBTyxDQUFDLGFBQUQsQ0FBL0I7O0FBQ0EsTUFBTTtBQUFFTyxFQUFBQTtBQUFGLElBQWNQLE9BQU8sQ0FBQyxPQUFELENBQTNCOztBQUNBLE1BQU1RLE1BQU0sR0FBR1IsT0FBTyxDQUFDLGtCQUFELENBQXRCLEMsQ0FFQTs7O0FBQ0EsTUFBTVMsTUFBTSxHQUFHVixPQUFPLENBQUNXLE1BQVIsRUFBZjtBQUdBRCxNQUFNLENBQUNFLEdBQVAsQ0FBV0osT0FBWDtBQUVBRSxNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzVCLFNBQU9BLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLGlCQUFULENBQVA7QUFDRCxDQUZEO0FBSUFOLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLE9BQVgsRUFBb0JULFVBQXBCO0FBQ0FPLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFFBQVgsRUFBcUJSLFdBQXJCO0FBQ0FNLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFNBQVgsRUFBcUJQLFlBQXJCO0FBQ0FLLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFFBQVgsRUFBb0JOLFdBQXBCO0FBQ0FJLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFlBQVgsRUFBd0JMLGVBQXhCO0FBRUE7Ozs7QUFHQUcsTUFBTSxDQUFDRSxHQUFQLENBQVcsQ0FBQ0UsR0FBRCxFQUFNQyxHQUFOLEVBQVdFLElBQVgsS0FBb0I7QUFDN0JBLEVBQUFBLElBQUksQ0FBQ2YsSUFBSSxDQUFDZ0IsUUFBTCxDQUFjLE9BQWQsQ0FBRCxDQUFKO0FBQ0QsQ0FGRDtBQUlBOzs7O0FBR0FSLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLENBQUNPLEdBQUQsRUFBTUwsR0FBTixFQUFXQyxHQUFYLEVBQWdCRSxJQUFoQixLQUF5QjtBQUNsQyxNQUFJRSxHQUFHLENBQUNDLElBQUosS0FBYSxtQkFBakIsRUFBc0M7QUFDcEMsUUFBSVgsTUFBSixDQUFXLElBQVgsRUFBaUIsU0FBakIsRUFBNEI7QUFDMUJZLE1BQUFBLEtBQUssRUFBRUYsR0FBRyxDQUFDRyxNQURlO0FBRTFCQyxNQUFBQSxRQUFRLEVBQUVKLEdBQUcsQ0FBQ0M7QUFGWSxLQUE1QixFQUdHSSxPQUhILENBR1dULEdBQUcsQ0FBQ08sTUFBSixDQUFXSCxHQUFHLENBQUNHLE1BQWYsQ0FIWDtBQUlELEdBTEQsTUFNSztBQUNILFVBQU1HLEdBQUcsR0FBSU4sR0FBRyxJQUFJQSxHQUFHLENBQUNPLE9BQVosSUFBd0IsTUFBcEM7QUFDQSxVQUFNQyxVQUFVLEdBQUlSLEdBQUcsQ0FBQ1MsTUFBSixJQUFjVCxHQUFHLENBQUNTLE1BQUosQ0FBV0QsVUFBMUIsSUFBeUMsR0FBNUQ7QUFDQSxVQUFNSixRQUFRLEdBQUlKLEdBQUcsQ0FBQ1MsTUFBSixJQUFjVCxHQUFHLENBQUNTLE1BQUosQ0FBV0MsT0FBekIsSUFBb0NWLEdBQUcsQ0FBQ1MsTUFBSixDQUFXQyxPQUFYLENBQW1CUixLQUF4RCxJQUFrRUYsR0FBRyxDQUFDTyxPQUF2RjtBQUNBLFFBQUlqQixNQUFKLENBQVcsSUFBWCxFQUFpQmdCLEdBQWpCLEVBQXNCO0FBQ3BCSixNQUFBQSxLQUFLLEVBQUVNLFVBQVUsSUFBSUwsTUFERDtBQUVwQkMsTUFBQUE7QUFGb0IsS0FBdEIsRUFHR08sSUFISCxDQUdRZixHQUFHLENBQUNPLE1BQUosQ0FBV0ssVUFBWCxDQUhSO0FBSUQ7QUFFRixDQWpCRDtBQW1CQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCdEIsTUFBakIiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xccm91dGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCBib29tID0gcmVxdWlyZSgnYm9vbScpICAgICAgICAgIC8v5byV5YWl55So5LqO5aSE55CGNDA06K+35rGC55qE5Lit6Ze05Lu2XG5jb25zdCB1c2VyUm91dGVyID0gcmVxdWlyZSgnLi91c2VyJylcbmNvbnN0IHN0YWZmUm91dGVyID0gcmVxdWlyZSgnLi9zdGFmZicpXG5jb25zdCB1cGxvYWRSb3V0ZXI9cmVxdWlyZSgnLi91cGxvYWQnKVxuY29uc3QgY2xhc3NSb3V0ZXIgPSByZXF1aXJlKCcuL2NsYXNzJylcbmNvbnN0IGNvbW1vZGl0eVJvdXRlciA9IHJlcXVpcmUoJy4vY29tbW9kaXR5JylcbmNvbnN0IHsgand0QXV0aCB9ID0gcmVxdWlyZSgnLi9qd3QnKVxuY29uc3QgUmVzdWx0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1Jlc3VsdCcpXG5cbi8vIOazqOWGjOi3r+eUsVxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuXG5cbnJvdXRlci51c2Uoand0QXV0aClcblxucm91dGVyLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICByZXR1cm4gcmVzLnNlbmQoJ0hlbGxvIEhvdXNlaG9sZCcpXG59KVxuXG5yb3V0ZXIudXNlKCcvdXNlcicsIHVzZXJSb3V0ZXIpXG5yb3V0ZXIudXNlKCcvc3RhZmYnLCBzdGFmZlJvdXRlcilcbnJvdXRlci51c2UoJy91cGxvYWQnLHVwbG9hZFJvdXRlcilcbnJvdXRlci51c2UoJy9jbGFzcycsY2xhc3NSb3V0ZXIpXG5yb3V0ZXIudXNlKCcvY29tbW9kaXR5Jyxjb21tb2RpdHlSb3V0ZXIpXG5cbi8qXG4gIOmbhuS4reWkhOeQhjQwNOivt+axgueahOS4remXtOS7tlxuICovXG5yb3V0ZXIudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBuZXh0KGJvb20ubm90Rm91bmQoJ+WcsOWdgOS4jeWtmOWcqCcpKVxufSlcblxuLypcbiAg6Ieq5a6a5LmJ6Lev55Sx5byC5bi45aSE55CG5Lit6Ze05Lu2XG4gKi9cbnJvdXRlci51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgaWYgKGVyci5uYW1lID09PSAnVW5hdXRob3JpemVkRXJyb3InKSB7XG4gICAgbmV3IFJlc3VsdChudWxsLCAndG9rZW7lpLHmlYgnLCB7XG4gICAgICBlcnJvcjogZXJyLnN0YXR1cyxcbiAgICAgIGVycm9yTXNnOiBlcnIubmFtZVxuICAgIH0pLmV4cGlyZWQocmVzLnN0YXR1cyhlcnIuc3RhdHVzKSlcbiAgfVxuICBlbHNlIHtcbiAgICBjb25zdCBtc2cgPSAoZXJyICYmIGVyci5tZXNzYWdlKSB8fCAn57O757uf6ZSZ6K+vJ1xuICAgIGNvbnN0IHN0YXR1c0NvZGUgPSAoZXJyLm91dHB1dCAmJiBlcnIub3V0cHV0LnN0YXR1c0NvZGUpIHx8IDUwMDtcbiAgICBjb25zdCBlcnJvck1zZyA9IChlcnIub3V0cHV0ICYmIGVyci5vdXRwdXQucGF5bG9hZCAmJiBlcnIub3V0cHV0LnBheWxvYWQuZXJyb3IpIHx8IGVyci5tZXNzYWdlXG4gICAgbmV3IFJlc3VsdChudWxsLCBtc2csIHtcbiAgICAgIGVycm9yOiBzdGF0dXNDb2RlIHx8IHN0YXR1cyxcbiAgICAgIGVycm9yTXNnXG4gICAgfSkuZmFpbChyZXMuc3RhdHVzKHN0YXR1c0NvZGUpKVxuICB9XG5cbn0pXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "boom",
        "userRouter",
        "staffRouter",
        "uploadRouter",
        "classRouter",
        "commodityRouter",
        "jwtAuth",
        "Result",
        "router",
        "Router",
        "use",
        "get",
        "req",
        "res",
        "send",
        "next",
        "notFound",
        "err",
        "name",
        "error",
        "status",
        "errorMsg",
        "expired",
        "msg",
        "message",
        "statusCode",
        "output",
        "payload",
        "fail",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB,C,CAAsC;;;AACtC,MAAME,UAAU,GAAGF,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,SAAD,CAA3B;;AACA,MAAMI,YAAY,GAACJ,OAAO,CAAC,UAAD,CAA1B;;AACA,MAAMK,WAAW,GAAGL,OAAO,CAAC,SAAD,CAA3B;;AACA,MAAMM,eAAe,GAAGN,OAAO,CAAC,aAAD,CAA/B;;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAcP,OAAO,CAAC,OAAD,CAA3B;;AACA,MAAMQ,MAAM,GAAGR,OAAO,CAAC,kBAAD,CAAtB,C,CAEA;;;AACA,MAAMS,MAAM,GAAGV,OAAO,CAACW,MAAR,EAAf;AAGAD,MAAM,CAACE,GAAP,CAAWJ,OAAX;AAEAE,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,SAAOA,GAAG,CAACC,IAAJ,CAAS,iBAAT,CAAP;AACD,CAFD;AAIAN,MAAM,CAACE,GAAP,CAAW,OAAX,EAAoBT,UAApB;AACAO,MAAM,CAACE,GAAP,CAAW,QAAX,EAAqBR,WAArB;AACAM,MAAM,CAACE,GAAP,CAAW,SAAX,EAAqBP,YAArB;AACAK,MAAM,CAACE,GAAP,CAAW,QAAX,EAAoBN,WAApB;AACAI,MAAM,CAACE,GAAP,CAAW,YAAX,EAAwBL,eAAxB;AAEA;;;;AAGAG,MAAM,CAACE,GAAP,CAAW,CAACE,GAAD,EAAMC,GAAN,EAAWE,IAAX,KAAoB;AAC7BA,EAAAA,IAAI,CAACf,IAAI,CAACgB,QAAL,CAAc,OAAd,CAAD,CAAJ;AACD,CAFD;AAIA;;;;AAGAR,MAAM,CAACE,GAAP,CAAW,CAACO,GAAD,EAAML,GAAN,EAAWC,GAAX,EAAgBE,IAAhB,KAAyB;AAClC,MAAIE,GAAG,CAACC,IAAJ,KAAa,mBAAjB,EAAsC;AACpC,QAAIX,MAAJ,CAAW,IAAX,EAAiB,SAAjB,EAA4B;AAC1BY,MAAAA,KAAK,EAAEF,GAAG,CAACG,MADe;AAE1BC,MAAAA,QAAQ,EAAEJ,GAAG,CAACC;AAFY,KAA5B,EAGGI,OAHH,CAGWT,GAAG,CAACO,MAAJ,CAAWH,GAAG,CAACG,MAAf,CAHX;AAID,GALD,MAMK;AACH,UAAMG,GAAG,GAAIN,GAAG,IAAIA,GAAG,CAACO,OAAZ,IAAwB,MAApC;AACA,UAAMC,UAAU,GAAIR,GAAG,CAACS,MAAJ,IAAcT,GAAG,CAACS,MAAJ,CAAWD,UAA1B,IAAyC,GAA5D;AACA,UAAMJ,QAAQ,GAAIJ,GAAG,CAACS,MAAJ,IAAcT,GAAG,CAACS,MAAJ,CAAWC,OAAzB,IAAoCV,GAAG,CAACS,MAAJ,CAAWC,OAAX,CAAmBR,KAAxD,IAAkEF,GAAG,CAACO,OAAvF;AACA,QAAIjB,MAAJ,CAAW,IAAX,EAAiBgB,GAAjB,EAAsB;AACpBJ,MAAAA,KAAK,EAAEM,UAAU,IAAIL,MADD;AAEpBC,MAAAA;AAFoB,KAAtB,EAGGO,IAHH,CAGQf,GAAG,CAACO,MAAJ,CAAWK,UAAX,CAHR;AAID;AAEF,CAjBD;AAmBAI,MAAM,CAACC,OAAP,GAAiBtB,MAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "sourcesContent": [
        "const express = require('express')\nconst boom = require('boom')          //引入用于处理404请求的中间件\nconst userRouter = require('./user')\nconst staffRouter = require('./staff')\nconst uploadRouter=require('./upload')\nconst classRouter = require('./class')\nconst commodityRouter = require('./commodity')\nconst { jwtAuth } = require('./jwt')\nconst Result = require('../models/Result')\n\n// 注册路由\nconst router = express.Router()\n\n\nrouter.use(jwtAuth)\n\nrouter.get('/', (req, res) => {\n  return res.send('Hello Household')\n})\n\nrouter.use('/user', userRouter)\nrouter.use('/staff', staffRouter)\nrouter.use('/upload',uploadRouter)\nrouter.use('/class',classRouter)\nrouter.use('/commodity',commodityRouter)\n\n/*\n  集中处理404请求的中间件\n */\nrouter.use((req, res, next) => {\n  next(boom.notFound('地址不存在'))\n})\n\n/*\n  自定义路由异常处理中间件\n */\nrouter.use((err, req, res, next) => {\n  if (err.name === 'UnauthorizedError') {\n    new Result(null, 'token失效', {\n      error: err.status,\n      errorMsg: err.name\n    }).expired(res.status(err.status))\n  }\n  else {\n    const msg = (err && err.message) || '系统错误'\n    const statusCode = (err.output && err.output.statusCode) || 500;\n    const errorMsg = (err.output && err.output.payload && err.output.payload.error) || err.message\n    new Result(null, msg, {\n      error: statusCode || status,\n      errorMsg\n    }).fail(res.status(statusCode))\n  }\n\n})\n\nmodule.exports = router"
      ]
    },
    "sourceType": "module",
    "mtime": 1587473927283
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst Result = require('../models/Result');\n\nconst {\n  login,\n  findUser\n} = require('../service/user');\n\nconst {\n  md5\n} = require('../utils/encryption');\n\nconst {\n  PWD_SALT,\n  PRIVATE_KEY,\n  JWT_EXPIRED\n} = require('../utils/constant');\n\nconst {\n  body,\n  validationResult\n} = require('express-validator');\n\nconst boom = require('boom');\n\nconst jwt = require('jsonwebtoken');\n\nconst {\n  decode\n} = require('../utils/decode');\n\nconst router = express.Router();\nrouter.post('/login', [body('username').isString().withMessage('username类型不为String'), body('password').isString().withMessage('password类型不为String')], function (req, res, next) {\n  const err = validationResult(req);\n\n  if (!err.isEmpty()) {\n    const [{\n      msg\n    }] = err.errors;\n    next(boom.badRequest(msg));\n  } else {\n    const username = req.body.username;\n    const password = md5(req.body.password) + md5(PWD_SALT);\n    login(username, password).then(result => {\n      if (!result || result.length === 0) {\n        new Result('用户名或密码错误').fail(res);\n      } else {\n        const token = jwt.sign({\n          username\n        }, PRIVATE_KEY, {\n          expiresIn: JWT_EXPIRED\n        });\n        new Result({\n          token\n        }, '登录成功').success(res);\n      }\n    });\n  }\n});\nrouter.get('/info', function (req, res) {\n  const decoded = decode(req);\n\n  if (decoded && decoded.username) {\n    findUser(decoded.username).then(user => {\n      if (user) {\n        user.roles = [user.role];\n        new Result(user, '获取用户信息成功').success(res);\n      } else {\n        new Result('获取用户信息失败').fail(res);\n      }\n    });\n  } else {\n    new Result('用户信息解析失败').fail(res);\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJSZXN1bHQiLCJsb2dpbiIsImZpbmRVc2VyIiwibWQ1IiwiUFdEX1NBTFQiLCJQUklWQVRFX0tFWSIsIkpXVF9FWFBJUkVEIiwiYm9keSIsInZhbGlkYXRpb25SZXN1bHQiLCJib29tIiwiand0IiwiZGVjb2RlIiwicm91dGVyIiwiUm91dGVyIiwicG9zdCIsImlzU3RyaW5nIiwid2l0aE1lc3NhZ2UiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyIiwiaXNFbXB0eSIsIm1zZyIsImVycm9ycyIsImJhZFJlcXVlc3QiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInJlc3VsdCIsImxlbmd0aCIsImZhaWwiLCJ0b2tlbiIsInNpZ24iLCJleHBpcmVzSW4iLCJzdWNjZXNzIiwiZ2V0IiwiZGVjb2RlZCIsInVzZXIiLCJyb2xlcyIsInJvbGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUNBLE1BQU07QUFBRUUsRUFBQUEsS0FBRjtBQUFRQyxFQUFBQTtBQUFSLElBQXFCSCxPQUFPLENBQUMsaUJBQUQsQ0FBbEM7O0FBQ0EsTUFBTTtBQUFFSSxFQUFBQTtBQUFGLElBQVVKLE9BQU8sQ0FBQyxxQkFBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVLLEVBQUFBLFFBQUY7QUFBWUMsRUFBQUEsV0FBWjtBQUF5QkMsRUFBQUE7QUFBekIsSUFBeUNQLE9BQU8sQ0FBQyxtQkFBRCxDQUF0RDs7QUFDQSxNQUFNO0FBQUVRLEVBQUFBLElBQUY7QUFBUUMsRUFBQUE7QUFBUixJQUE2QlQsT0FBTyxDQUFDLG1CQUFELENBQTFDOztBQUNBLE1BQU1VLElBQUksR0FBR1YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVcs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amVjdFxcV2ViXFxnaXRcXGhvdXNlaG9sZC1zZXJ2aWNlLXNlcnZlclxcc3JjXFxyb3V0ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IFJlc3VsdCA9IHJlcXVpcmUoJy4uL21vZGVscy9SZXN1bHQnKVxuY29uc3QgeyBsb2dpbixmaW5kVXNlciB9ID0gcmVxdWlyZSgnLi4vc2VydmljZS91c2VyJylcbmNvbnN0IHsgbWQ1IH0gPSByZXF1aXJlKCcuLi91dGlscy9lbmNyeXB0aW9uJylcbmNvbnN0IHsgUFdEX1NBTFQsIFBSSVZBVEVfS0VZLCBKV1RfRVhQSVJFRCB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnQnKVxuY29uc3QgeyBib2R5LCB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvcicpXG5jb25zdCBib29tID0gcmVxdWlyZSgnYm9vbScpXG5jb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKVxuY29uc3QgeyBkZWNvZGUgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2RlY29kZScpXG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcblxucm91dGVyLnBvc3QoJy9sb2dpbicsXG4gIFtcbiAgICBib2R5KCd1c2VybmFtZScpLmlzU3RyaW5nKCkud2l0aE1lc3NhZ2UoJ3VzZXJuYW1l57G75Z6L5LiN5Li6U3RyaW5nJyksXG4gICAgYm9keSgncGFzc3dvcmQnKS5pc1N0cmluZygpLndpdGhNZXNzYWdlKCdwYXNzd29yZOexu+Wei+S4jeS4ulN0cmluZycpXG4gIF0sXG4gIGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IGVyciA9IHZhbGlkYXRpb25SZXN1bHQocmVxKVxuICAgIGlmICghZXJyLmlzRW1wdHkoKSkge1xuICAgICAgY29uc3QgW3sgbXNnIH1dID0gZXJyLmVycm9yc1xuICAgICAgbmV4dChib29tLmJhZFJlcXVlc3QobXNnKSlcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdXNlcm5hbWUgPSByZXEuYm9keS51c2VybmFtZVxuICAgICAgY29uc3QgcGFzc3dvcmQgPSBtZDUocmVxLmJvZHkucGFzc3dvcmQpICsgbWQ1KFBXRF9TQUxUKVxuXG4gICAgICBsb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgaWYgKCFyZXN1bHQgfHwgcmVzdWx0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIG5ldyBSZXN1bHQoJ+eUqOaIt+WQjeaIluWvhueggemUmeivrycpLmZhaWwocmVzKVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oXG4gICAgICAgICAgICB7IHVzZXJuYW1lIH0sXG4gICAgICAgICAgICBQUklWQVRFX0tFWSxcbiAgICAgICAgICAgIHsgZXhwaXJlc0luOiBKV1RfRVhQSVJFRCB9XG4gICAgICAgICAgKVxuICAgICAgICAgIG5ldyBSZXN1bHQoeyB0b2tlbiB9LCAn55m75b2V5oiQ5YqfJykuc3VjY2VzcyhyZXMpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9KVxuXG5yb3V0ZXIuZ2V0KCcvaW5mbycsIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICBjb25zdCBkZWNvZGVkID0gZGVjb2RlKHJlcSlcbiAgaWYgKGRlY29kZWQgJiYgZGVjb2RlZC51c2VybmFtZSkge1xuICAgIGZpbmRVc2VyKGRlY29kZWQudXNlcm5hbWUpLnRoZW4odXNlciA9PiB7XG4gICAgICBpZiAodXNlcikge1xuICAgICAgICB1c2VyLnJvbGVzID0gW3VzZXIucm9sZV1cbiAgICAgICAgbmV3IFJlc3VsdCh1c2VyLCAn6I635Y+W55So5oi35L+h5oGv5oiQ5YqfJykuc3VjY2VzcyhyZXMpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXcgUmVzdWx0KCfojrflj5bnlKjmiLfkv6Hmga/lpLHotKUnKS5mYWlsKHJlcylcbiAgICAgIH1cbiAgICB9KVxuICB9IGVsc2Uge1xuICAgIG5ldyBSZXN1bHQoJ+eUqOaIt+S/oeaBr+ino+aekOWksei0pScpLmZhaWwocmVzKVxuICB9XG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "express",
        "require",
        "Result",
        "login",
        "findUser",
        "md5",
        "PWD_SALT",
        "PRIVATE_KEY",
        "JWT_EXPIRED",
        "body",
        "validationResult",
        "boom",
        "jwt",
        "decode",
        "router",
        "Router",
        "post",
        "isString",
        "withMessage",
        "req",
        "res",
        "next",
        "err",
        "isEmpty",
        "msg",
        "errors",
        "badRequest",
        "username",
        "password",
        "then",
        "result",
        "length",
        "fail",
        "token",
        "sign",
        "expiresIn",
        "success",
        "get",
        "decoded",
        "user",
        "roles",
        "role",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "sourcesContent": [
        "const express = require('express')\nconst Result = require('../models/Result')\nconst { login,findUser } = require('../service/user')\nconst { md5 } = require('../utils/encryption')\nconst { PWD_SALT, PRIVATE_KEY, JWT_EXPIRED } = require('../utils/constant')\nconst { body, validationResult } = require('express-validator')\nconst boom = require('boom')\nconst jwt = require('jsonwebtoken')\nconst { decode } = require('../utils/decode')\n\nconst router = express.Router()\n\nrouter.post('/login',\n  [\n    body('username').isString().withMessage('username类型不为String'),\n    body('password').isString().withMessage('password类型不为String')\n  ],\n  function (req, res, next) {\n    const err = validationResult(req)\n    if (!err.isEmpty()) {\n      const [{ msg }] = err.errors\n      next(boom.badRequest(msg))\n    } else {\n      const username = req.body.username\n      const password = md5(req.body.password) + md5(PWD_SALT)\n\n      login(username, password).then(result => {\n        if (!result || result.length === 0) {\n          new Result('用户名或密码错误').fail(res)\n        }\n        else {\n          const token = jwt.sign(\n            { username },\n            PRIVATE_KEY,\n            { expiresIn: JWT_EXPIRED }\n          )\n          new Result({ token }, '登录成功').success(res)\n        }\n      })\n    }\n  })\n\nrouter.get('/info', function (req, res) {\n  const decoded = decode(req)\n  if (decoded && decoded.username) {\n    findUser(decoded.username).then(user => {\n      if (user) {\n        user.roles = [user.role]\n        new Result(user, '获取用户信息成功').success(res)\n      } else {\n        new Result('获取用户信息失败').fail(res)\n      }\n    })\n  } else {\n    new Result('用户信息解析失败').fail(res)\n  }\n})\n\nmodule.exports = router"
      ]
    },
    "sourceType": "module",
    "mtime": 1587041433140
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\models\\\\Result.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\models\\Result.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\models\\Result.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\models\\Result.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\models\\",
        "sourceFileName": "Result.js"
      }
    },
    "ast": null,
    "code": "const {\n  CODE_ERROR,\n  CODE_SUCCESS,\n  CODE_TOKEN_EXPIRED\n} = require('../utils/constant');\n\nclass Result {\n  constructor(data, msg = '操作成功', options) {\n    this.data = null;\n\n    if (arguments.length === 0) {\n      this.msg = '操作成功';\n    } else if (arguments.length === 1) {\n      this.msg = data;\n    } else {\n      this.data = JSON.parse(JSON.stringify(data));\n      this.msg = msg;\n\n      if (options) {\n        this.options = options;\n      }\n    }\n  }\n\n  createResult() {\n    if (!this.code) {\n      this.code = CODE_SUCCESS;\n    }\n\n    let base = {\n      code: this.code,\n      msg: this.msg\n    };\n\n    if (this.data) {\n      base.data = this.data;\n    }\n\n    if (this.options) {\n      base = { ...base,\n        ...this.options\n      };\n    }\n\n    return base;\n  }\n\n  json(res) {\n    res.json(this.createResult());\n  }\n\n  success(res) {\n    this.code = CODE_SUCCESS;\n    this.json(res);\n  }\n\n  fail(res) {\n    this.code = CODE_ERROR;\n    this.json(res);\n  }\n\n  expired(res) {\n    this.code = CODE_TOKEN_EXPIRED;\n    this.json(res);\n  }\n\n}\n\nmodule.exports = Result;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlc3VsdC5qcyJdLCJuYW1lcyI6WyJDT0RFX0VSUk9SIiwiQ09ERV9TVUNDRVNTIiwiQ09ERV9UT0tFTl9FWFBJUkVEIiwicmVxdWlyZSIsIlJlc3VsdCIsImNvbnN0cnVjdG9yIiwiZGF0YSIsIm1zZyIsIm9wdGlvbnMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJjcmVhdGVSZXN1bHQiLCJjb2RlIiwiYmFzZSIsImpzb24iLCJyZXMiLCJzdWNjZXNzIiwiZmFpbCIsImV4cGlyZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQ0pBLEVBQUFBLFVBREk7QUFFSkMsRUFBQUEsWUFGSTtBQUdKQyxFQUFBQTtBQUhJLElBSUZDLE9BQU8sQ0FBQyxtQkFBRCxDQUpYOztBQU1BLE1BQU1DLE1BQU4sQ0FBYTtBQUNYQyxFQUFBQSxXQUFXLENBQUNDLElBQUQsRUFBT0MsR0FBRyxHQUFHLE1BQWIsRUFBcUJDLE9BQXJCLEVBQThCO0FBQ3ZDLFNBQUtGLElBQUwsR0FBWSxJQUFaOztBQUNBLFFBQUlHLFNBQVMsQ0FBQ0MsTUFBVixLQUFxQixDQUF6QixFQUE0QjtBQUMxQixXQUFLSCxHQUFMLEdBQVcsTUFBWDtBQUNELEtBRkQsTUFFTyxJQUFJRSxTQUFTLENBQUNDLE1BQVYsS0FBcUIsQ0FBekIsRUFBNEI7QUFDakMsV0FBS0gsR0FBTCxHQUFXRCxJQUFYO0FBQ0QsS0FGTSxNQUVBO0FBQ0wsV0FBS0EsSUFBTCxHQUFZSyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxTQUFMLENBQWVQLElBQWYsQ0FBWCxDQUFaO0FBQ0EsV0FBS0MsR0FBTCxHQUFXQSxHQUFYOztBQUNBLFVBQUlDLE9BQUosRUFBYTtBQUNYLGFBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNEO0FBQ0Y7QUFDRjs7QUFFRE0sRUFBQUEsWUFBWSxHQUFHO0FBQ2IsUUFBSSxDQUFDLEtBQUtDLElBQVYsRUFBZ0I7QUFDZCxXQUFLQSxJQUFMLEdBQVlkLFlBQVo7QUFDRDs7QUFDRCxRQUFJZSxJQUFJLEdBQUc7QUFDVEQsTUFBQUEsSUFBSSxFQUFFLEtBQUtBLElBREY7QUFFVFIsTUFBQUEsR0FBRyxFQUFFLEtBQUtBO0FBRkQsS0FBWDs7QUFJQSxRQUFJLEtBQUtELElBQVQsRUFBZTtBQUNiVSxNQUFBQSxJQUFJLENBQUNWLElBQUwsR0FBWSxLQUFLQSxJQUFqQjtBQUNEOztBQUNELFFBQUksS0FBS0UsT0FBVCxFQUFrQjtBQUNoQlEsTUFBQUEsSUFBSSxHQUFHLEVBQUUsR0FBR0EsSUFBTDtBQUFXLFdBQUcsS0FBS1I7QUFBbkIsT0FBUDtBQUNEOztBQUNELFdBQU9RLElBQVA7QUFDRDs7QUFFREMsRUFBQUEsSUFBSSxDQUFDQyxHQUFELEVBQU07QUFDUkEsSUFBQUEsR0FBRyxDQUFDRCxJQUFKLENBQVMsS0FBS0gsWUFBTCxFQUFUO0FBQ0Q7O0FBRURLLEVBQUFBLE9BQU8sQ0FBQ0QsR0FBRCxFQUFNO0FBQ1gsU0FBS0gsSUFBTCxHQUFZZCxZQUFaO0FBQ0EsU0FBS2dCLElBQUwsQ0FBVUMsR0FBVjtBQUNEOztBQUVERSxFQUFBQSxJQUFJLENBQUNGLEdBQUQsRUFBTTtBQUNSLFNBQUtILElBQUwsR0FBWWYsVUFBWjtBQUNBLFNBQUtpQixJQUFMLENBQVVDLEdBQVY7QUFDRDs7QUFFREcsRUFBQUEsT0FBTyxDQUFDSCxHQUFELEVBQU07QUFDWCxTQUFLSCxJQUFMLEdBQVliLGtCQUFaO0FBQ0EsU0FBS2UsSUFBTCxDQUFVQyxHQUFWO0FBQ0Q7O0FBbERVOztBQXFEYkksTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsTUFBakIiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7XG4gIENPREVfRVJST1IsXG4gIENPREVfU1VDQ0VTUyxcbiAgQ09ERV9UT0tFTl9FWFBJUkVEXG59ID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnQnKVxuXG5jbGFzcyBSZXN1bHQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCBtc2cgPSAn5pON5L2c5oiQ5YqfJywgb3B0aW9ucykge1xuICAgIHRoaXMuZGF0YSA9IG51bGxcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5tc2cgPSAn5pON5L2c5oiQ5YqfJ1xuICAgIH0gZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgdGhpcy5tc2cgPSBkYXRhXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZGF0YSkpXG4gICAgICB0aGlzLm1zZyA9IG1zZ1xuICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9uc1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNyZWF0ZVJlc3VsdCgpIHtcbiAgICBpZiAoIXRoaXMuY29kZSkge1xuICAgICAgdGhpcy5jb2RlID0gQ09ERV9TVUNDRVNTXG4gICAgfVxuICAgIGxldCBiYXNlID0ge1xuICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgbXNnOiB0aGlzLm1zZ1xuICAgIH1cbiAgICBpZiAodGhpcy5kYXRhKSB7XG4gICAgICBiYXNlLmRhdGEgPSB0aGlzLmRhdGFcbiAgICB9XG4gICAgaWYgKHRoaXMub3B0aW9ucykge1xuICAgICAgYmFzZSA9IHsgLi4uYmFzZSwgLi4udGhpcy5vcHRpb25zIH1cbiAgICB9XG4gICAgcmV0dXJuIGJhc2VcbiAgfVxuXG4gIGpzb24ocmVzKSB7XG4gICAgcmVzLmpzb24odGhpcy5jcmVhdGVSZXN1bHQoKSlcbiAgfVxuXG4gIHN1Y2Nlc3MocmVzKSB7XG4gICAgdGhpcy5jb2RlID0gQ09ERV9TVUNDRVNTXG4gICAgdGhpcy5qc29uKHJlcylcbiAgfVxuXG4gIGZhaWwocmVzKSB7XG4gICAgdGhpcy5jb2RlID0gQ09ERV9FUlJPUlxuICAgIHRoaXMuanNvbihyZXMpXG4gIH1cblxuICBleHBpcmVkKHJlcykge1xuICAgIHRoaXMuY29kZSA9IENPREVfVE9LRU5fRVhQSVJFRFxuICAgIHRoaXMuanNvbihyZXMpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZXN1bHQiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Result.js"
      ],
      "names": [
        "CODE_ERROR",
        "CODE_SUCCESS",
        "CODE_TOKEN_EXPIRED",
        "require",
        "Result",
        "constructor",
        "data",
        "msg",
        "options",
        "arguments",
        "length",
        "JSON",
        "parse",
        "stringify",
        "createResult",
        "code",
        "base",
        "json",
        "res",
        "success",
        "fail",
        "expired",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AACJA,EAAAA,UADI;AAEJC,EAAAA,YAFI;AAGJC,EAAAA;AAHI,IAIFC,OAAO,CAAC,mBAAD,CAJX;;AAMA,MAAMC,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,IAAD,EAAOC,GAAG,GAAG,MAAb,EAAqBC,OAArB,EAA8B;AACvC,SAAKF,IAAL,GAAY,IAAZ;;AACA,QAAIG,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAKH,GAAL,GAAW,MAAX;AACD,KAFD,MAEO,IAAIE,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,WAAKH,GAAL,GAAWD,IAAX;AACD,KAFM,MAEA;AACL,WAAKA,IAAL,GAAYK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,IAAf,CAAX,CAAZ;AACA,WAAKC,GAAL,GAAWA,GAAX;;AACA,UAAIC,OAAJ,EAAa;AACX,aAAKA,OAAL,GAAeA,OAAf;AACD;AACF;AACF;;AAEDM,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC,KAAKC,IAAV,EAAgB;AACd,WAAKA,IAAL,GAAYd,YAAZ;AACD;;AACD,QAAIe,IAAI,GAAG;AACTD,MAAAA,IAAI,EAAE,KAAKA,IADF;AAETR,MAAAA,GAAG,EAAE,KAAKA;AAFD,KAAX;;AAIA,QAAI,KAAKD,IAAT,EAAe;AACbU,MAAAA,IAAI,CAACV,IAAL,GAAY,KAAKA,IAAjB;AACD;;AACD,QAAI,KAAKE,OAAT,EAAkB;AAChBQ,MAAAA,IAAI,GAAG,EAAE,GAAGA,IAAL;AAAW,WAAG,KAAKR;AAAnB,OAAP;AACD;;AACD,WAAOQ,IAAP;AACD;;AAEDC,EAAAA,IAAI,CAACC,GAAD,EAAM;AACRA,IAAAA,GAAG,CAACD,IAAJ,CAAS,KAAKH,YAAL,EAAT;AACD;;AAEDK,EAAAA,OAAO,CAACD,GAAD,EAAM;AACX,SAAKH,IAAL,GAAYd,YAAZ;AACA,SAAKgB,IAAL,CAAUC,GAAV;AACD;;AAEDE,EAAAA,IAAI,CAACF,GAAD,EAAM;AACR,SAAKH,IAAL,GAAYf,UAAZ;AACA,SAAKiB,IAAL,CAAUC,GAAV;AACD;;AAEDG,EAAAA,OAAO,CAACH,GAAD,EAAM;AACX,SAAKH,IAAL,GAAYb,kBAAZ;AACA,SAAKe,IAAL,CAAUC,GAAV;AACD;;AAlDU;;AAqDbI,MAAM,CAACC,OAAP,GAAiBnB,MAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\models\\",
      "sourcesContent": [
        "const {\n  CODE_ERROR,\n  CODE_SUCCESS,\n  CODE_TOKEN_EXPIRED\n} = require('../utils/constant')\n\nclass Result {\n  constructor(data, msg = '操作成功', options) {\n    this.data = null\n    if (arguments.length === 0) {\n      this.msg = '操作成功'\n    } else if (arguments.length === 1) {\n      this.msg = data\n    } else {\n      this.data = JSON.parse(JSON.stringify(data))\n      this.msg = msg\n      if (options) {\n        this.options = options\n      }\n    }\n  }\n\n  createResult() {\n    if (!this.code) {\n      this.code = CODE_SUCCESS\n    }\n    let base = {\n      code: this.code,\n      msg: this.msg\n    }\n    if (this.data) {\n      base.data = this.data\n    }\n    if (this.options) {\n      base = { ...base, ...this.options }\n    }\n    return base\n  }\n\n  json(res) {\n    res.json(this.createResult())\n  }\n\n  success(res) {\n    this.code = CODE_SUCCESS\n    this.json(res)\n  }\n\n  fail(res) {\n    this.code = CODE_ERROR\n    this.json(res)\n  }\n\n  expired(res) {\n    this.code = CODE_TOKEN_EXPIRED\n    this.json(res)\n  }\n}\n\nmodule.exports = Result"
      ]
    },
    "sourceType": "module",
    "mtime": 1587108544876
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\constant.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\constant.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\constant.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\constant.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
        "sourceFileName": "constant.js"
      }
    },
    "ast": null,
    "code": "const UPLOAD_PATH = 'C:/Users/yao/upload/household-service';\nconst SOURCE_PATH = 'https://yaoluolong.xyz:8088/household-service';\nmodule.exports = {\n  CODE_ERROR: -1,\n  //错误状态码\n  CODE_SUCCESS: 0,\n  //成功状态码\n  CODE_TOKEN_EXPIRED: -2,\n  //token已过期\n  debug: false,\n  //debug模式开关\n  PWD_SALT: 'yaoluolong',\n  //MD5加密密钥\n  PRIVATE_KEY: 'yaoluolong',\n  //JWT密钥\n  JWT_EXPIRED: 60 * 60 * 2,\n  //token失效时间\n  UPLOAD_PATH,\n  //照片上传路径\n  SOURCE_PATH //资源服务器地址      \n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50LmpzIl0sIm5hbWVzIjpbIlVQTE9BRF9QQVRIIiwiU09VUkNFX1BBVEgiLCJtb2R1bGUiLCJleHBvcnRzIiwiQ09ERV9FUlJPUiIsIkNPREVfU1VDQ0VTUyIsIkNPREVfVE9LRU5fRVhQSVJFRCIsImRlYnVnIiwiUFdEX1NBTFQiLCJQUklWQVRFX0tFWSIsIkpXVF9FWFBJUkVEIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxXQUFXLEdBQUUsdUNBQW5CO0FBQ0EsTUFBTUMsV0FBVyxHQUFFLCtDQUFuQjtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsQ0FERTtBQUNjO0FBQzdCQyxFQUFBQSxZQUFZLEVBQUUsQ0FGQztBQUVjO0FBQzdCQyxFQUFBQSxrQkFBa0IsRUFBRSxDQUFDLENBSE47QUFHYztBQUM3QkMsRUFBQUEsS0FBSyxFQUFFLEtBSlE7QUFJYztBQUM3QkMsRUFBQUEsUUFBUSxFQUFFLFlBTEs7QUFLYztBQUM3QkMsRUFBQUEsV0FBVyxFQUFFLFlBTkU7QUFNYztBQUM3QkMsRUFBQUEsV0FBVyxFQUFFLEtBQUcsRUFBSCxHQUFNLENBUEo7QUFPYztBQUM3QlYsRUFBQUEsV0FSZTtBQVFjO0FBQzdCQyxFQUFBQSxXQVRlLENBU2M7O0FBVGQsQ0FBakIiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xcdXRpbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVQTE9BRF9QQVRIID0nQzovVXNlcnMveWFvL3VwbG9hZC9ob3VzZWhvbGQtc2VydmljZSdcbmNvbnN0IFNPVVJDRV9QQVRIID0naHR0cHM6Ly95YW9sdW9sb25nLnh5ejo4MDg4L2hvdXNlaG9sZC1zZXJ2aWNlJ1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQ09ERV9FUlJPUjogLTEsICAgICAgICAgICAgICAvL+mUmeivr+eKtuaAgeeggVxuICBDT0RFX1NVQ0NFU1M6IDAsICAgICAgICAgICAgIC8v5oiQ5Yqf54q25oCB56CBXG4gIENPREVfVE9LRU5fRVhQSVJFRDogLTIgLCAgICAgLy90b2tlbuW3sui/h+acn1xuICBkZWJ1ZzogZmFsc2UsICAgICAgICAgICAgICAgIC8vZGVidWfmqKHlvI/lvIDlhbNcbiAgUFdEX1NBTFQ6ICd5YW9sdW9sb25nJywgICAgICAvL01ENeWKoOWvhuWvhumSpVxuICBQUklWQVRFX0tFWTogJ3lhb2x1b2xvbmcnLCAgIC8vSldU5a+G6ZKlXG4gIEpXVF9FWFBJUkVEOiA2MCo2MCoyLCAgICAgICAgLy90b2tlbuWkseaViOaXtumXtFxuICBVUExPQURfUEFUSCwgICAgICAgICAgICAgICAgIC8v54Wn54mH5LiK5Lyg6Lev5b6EXG4gIFNPVVJDRV9QQVRIICAgICAgICAgICAgICAgICAgLy/otYTmupDmnI3liqHlmajlnLDlnYAgICAgICBcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "constant.js"
      ],
      "names": [
        "UPLOAD_PATH",
        "SOURCE_PATH",
        "module",
        "exports",
        "CODE_ERROR",
        "CODE_SUCCESS",
        "CODE_TOKEN_EXPIRED",
        "debug",
        "PWD_SALT",
        "PRIVATE_KEY",
        "JWT_EXPIRED"
      ],
      "mappings": "AAAA,MAAMA,WAAW,GAAE,uCAAnB;AACA,MAAMC,WAAW,GAAE,+CAAnB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,UAAU,EAAE,CAAC,CADE;AACc;AAC7BC,EAAAA,YAAY,EAAE,CAFC;AAEc;AAC7BC,EAAAA,kBAAkB,EAAE,CAAC,CAHN;AAGc;AAC7BC,EAAAA,KAAK,EAAE,KAJQ;AAIc;AAC7BC,EAAAA,QAAQ,EAAE,YALK;AAKc;AAC7BC,EAAAA,WAAW,EAAE,YANE;AAMc;AAC7BC,EAAAA,WAAW,EAAE,KAAG,EAAH,GAAM,CAPJ;AAOc;AAC7BV,EAAAA,WARe;AAQc;AAC7BC,EAAAA,WATe,CASc;;AATd,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "sourcesContent": [
        "const UPLOAD_PATH ='C:/Users/yao/upload/household-service'\nconst SOURCE_PATH ='https://yaoluolong.xyz:8088/household-service'\n\nmodule.exports = {\n  CODE_ERROR: -1,              //错误状态码\n  CODE_SUCCESS: 0,             //成功状态码\n  CODE_TOKEN_EXPIRED: -2 ,     //token已过期\n  debug: false,                //debug模式开关\n  PWD_SALT: 'yaoluolong',      //MD5加密密钥\n  PRIVATE_KEY: 'yaoluolong',   //JWT密钥\n  JWT_EXPIRED: 60*60*2,        //token失效时间\n  UPLOAD_PATH,                 //照片上传路径\n  SOURCE_PATH                  //资源服务器地址      \n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1587277525425
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const {\n  querySql\n} = require('../mysql');\n\nfunction login(username, password) {\n  const sql = `select * from user where username='${username}' and password='${password}'`;\n  return querySql(sql);\n}\n\nfunction findUser(username) {\n  const sql = `select * from user where username='${username}'`;\n  return querySql(sql);\n}\n\nmodule.exports = {\n  login,\n  findUser\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsicXVlcnlTcWwiLCJyZXF1aXJlIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwic3FsIiwiZmluZFVzZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBZUMsT0FBTyxDQUFDLFVBQUQsQ0FBNUI7O0FBRUEsU0FBU0MsS0FBVCxDQUFlQyxRQUFmLEVBQXlCQyxRQUF6QixFQUFtQztBQUNqQyxRQUFNQyxHQUFHLEdBQUksc0NBQXFDRixRQUFTLG1CQUFrQkMsUUFBUyxHQUF0RjtBQUNBLFNBQU9KLFFBQVEsQ0FBQ0ssR0FBRCxDQUFmO0FBQ0Q7O0FBRUQsU0FBU0MsUUFBVCxDQUFrQkgsUUFBbEIsRUFBMkI7QUFDekIsUUFBTUUsR0FBRyxHQUFJLHNDQUFxQ0YsUUFBUyxHQUEzRDtBQUNBLFNBQU9ILFFBQVEsQ0FBQ0ssR0FBRCxDQUFmO0FBQ0Q7O0FBRURFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmTixFQUFBQSxLQURlO0FBRWZJLEVBQUFBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xcc2VydmljZVxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBxdWVyeVNxbCB9ID0gcmVxdWlyZSgnLi4vbXlzcWwnKTtcblxuZnVuY3Rpb24gbG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gIGNvbnN0IHNxbCA9IGBzZWxlY3QgKiBmcm9tIHVzZXIgd2hlcmUgdXNlcm5hbWU9JyR7dXNlcm5hbWV9JyBhbmQgcGFzc3dvcmQ9JyR7cGFzc3dvcmR9J2BcbiAgcmV0dXJuIHF1ZXJ5U3FsKHNxbClcbn1cblxuZnVuY3Rpb24gZmluZFVzZXIodXNlcm5hbWUpe1xuICBjb25zdCBzcWwgPSBgc2VsZWN0ICogZnJvbSB1c2VyIHdoZXJlIHVzZXJuYW1lPScke3VzZXJuYW1lfSdgXG4gIHJldHVybiBxdWVyeVNxbChzcWwpXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBsb2dpbixcbiAgZmluZFVzZXJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "querySql",
        "require",
        "login",
        "username",
        "password",
        "sql",
        "findUser",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,OAAO,CAAC,UAAD,CAA5B;;AAEA,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACjC,QAAMC,GAAG,GAAI,sCAAqCF,QAAS,mBAAkBC,QAAS,GAAtF;AACA,SAAOJ,QAAQ,CAACK,GAAD,CAAf;AACD;;AAED,SAASC,QAAT,CAAkBH,QAAlB,EAA2B;AACzB,QAAME,GAAG,GAAI,sCAAqCF,QAAS,GAA3D;AACA,SAAOH,QAAQ,CAACK,GAAD,CAAf;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfN,EAAAA,KADe;AAEfI,EAAAA;AAFe,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "sourcesContent": [
        "const { querySql } = require('../mysql');\n\nfunction login(username, password) {\n  const sql = `select * from user where username='${username}' and password='${password}'`\n  return querySql(sql)\n}\n\nfunction findUser(username){\n  const sql = `select * from user where username='${username}'`\n  return querySql(sql)\n}\n\nmodule.exports = {\n  login,\n  findUser\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1586798014703
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\mysql\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\mysql\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const mysql = require('mysql');\n\nconst {\n  host,\n  user,\n  password,\n  database\n} = require('./config');\n\nconst {\n  debug\n} = require('../utils/constant');\n\nfunction connect() {\n  return mysql.createConnection({\n    host,\n    user,\n    password,\n    database,\n    multipleStatements: true\n  });\n}\n\nfunction querySql(sql) {\n  const conn = connect();\n  if (debug) console.log(sql);\n  return new Promise((resolve, reject) => {\n    try {\n      conn.query(sql, (err, results) => {\n        if (err) {\n          if (debug) console.log('查询失败，原因:' + JSON.stringify(err));\n          reject(err);\n        } else {\n          if (debug) console.log('查询成功', JSON.stringify(results));\n          if (results && results.length === 1) resolve(results[0]);else resolve(results);\n        }\n      });\n    } catch (e) {\n      reject(e);\n    } finally {\n      conn.end();\n    }\n  });\n}\n\nmodule.exports = {\n  querySql\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImRlYnVnIiwiY29ubmVjdCIsImNyZWF0ZUNvbm5lY3Rpb24iLCJtdWx0aXBsZVN0YXRlbWVudHMiLCJxdWVyeVNxbCIsInNxbCIsImNvbm4iLCJjb25zb2xlIiwibG9nIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJxdWVyeSIsImVyciIsInJlc3VsdHMiLCJKU09OIiwic3RyaW5naWZ5IiwibGVuZ3RoIiwiZSIsImVuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQSxJQUFGO0FBQVFDLEVBQUFBLElBQVI7QUFBY0MsRUFBQUEsUUFBZDtBQUF3QkMsRUFBQUE7QUFBeEIsSUFBcUNKLE9BQU8sQ0FBQyxVQUFELENBQWxEOztBQUNBLE1BQU07QUFBRUssRUFBQUE7QUFBRixJQUFZTCxPQUFPLENBQUMsbUJBQUQsQ0FBekI7O0FBRUEsU0FBU00sT0FBVCxHQUFtQjtBQUNqQixTQUFPUCxLQUFLLENBQUNRLGdCQUFOLENBQXVCO0FBQzVCTixJQUFBQSxJQUQ0QjtBQUU1QkMsSUFBQUEsSUFGNEI7QUFHNUJDLElBQUFBLFFBSDRCO0FBSTVCQyxJQUFBQSxRQUo0QjtBQUs1QkksSUFBQUEsa0JBQWtCLEVBQUU7QUFMUSxHQUF2QixDQUFQO0FBT0Q7O0FBRUQsU0FBU0MsUUFBVCxDQUFrQkMsR0FBbEIsRUFBdUI7QUFDckIsUUFBTUMsSUFBSSxHQUFHTCxPQUFPLEVBQXBCO0FBQ0EsTUFBR0QsS0FBSCxFQUNFTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBWjtBQUNGLFNBQU8sSUFBSUksT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0QyxRQUFJO0FBQ0ZMLE1BQUFBLElBQUksQ0FBQ00sS0FBTCxDQUFXUCxHQUFYLEVBQWdCLENBQUNRLEdBQUQsRUFBTUMsT0FBTixLQUFrQjtBQUNoQyxZQUFJRCxHQUFKLEVBQVM7QUFDUCxjQUFHYixLQUFILEVBQ0VPLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQWFPLElBQUksQ0FBQ0MsU0FBTCxDQUFlSCxHQUFmLENBQXpCO0FBQ0ZGLFVBQUFBLE1BQU0sQ0FBQ0UsR0FBRCxDQUFOO0FBQ0QsU0FKRCxNQUlPO0FBQ0wsY0FBR2IsS0FBSCxFQUNFTyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxNQUFaLEVBQW9CTyxJQUFJLENBQUNDLFNBQUwsQ0FBZUYsT0FBZixDQUFwQjtBQUNGLGNBQUdBLE9BQU8sSUFBRUEsT0FBTyxDQUFDRyxNQUFSLEtBQWlCLENBQTdCLEVBQ0VQLE9BQU8sQ0FBQ0ksT0FBTyxDQUFDLENBQUQsQ0FBUixDQUFQLENBREYsS0FHRUosT0FBTyxDQUFDSSxPQUFELENBQVA7QUFDSDtBQUNGLE9BYkQ7QUFjRCxLQWZELENBZUUsT0FBT0ksQ0FBUCxFQUFVO0FBQ1ZQLE1BQUFBLE1BQU0sQ0FBQ08sQ0FBRCxDQUFOO0FBQ0QsS0FqQkQsU0FpQlU7QUFDUlosTUFBQUEsSUFBSSxDQUFDYSxHQUFMO0FBQ0Q7QUFDRixHQXJCTSxDQUFQO0FBc0JEOztBQUdEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmpCLEVBQUFBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xcbXlzcWxcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwnKVxuY29uc3QgeyBob3N0LCB1c2VyLCBwYXNzd29yZCwgZGF0YWJhc2UgfSA9IHJlcXVpcmUoJy4vY29uZmlnJylcbmNvbnN0IHsgZGVidWcgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2NvbnN0YW50JylcblxuZnVuY3Rpb24gY29ubmVjdCgpIHtcbiAgcmV0dXJuIG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgIGhvc3QsXG4gICAgdXNlcixcbiAgICBwYXNzd29yZCxcbiAgICBkYXRhYmFzZSxcbiAgICBtdWx0aXBsZVN0YXRlbWVudHM6IHRydWVcbiAgfSlcbn1cblxuZnVuY3Rpb24gcXVlcnlTcWwoc3FsKSB7XG4gIGNvbnN0IGNvbm4gPSBjb25uZWN0KClcbiAgaWYoZGVidWcpXG4gICAgY29uc29sZS5sb2coc3FsKVxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25uLnF1ZXJ5KHNxbCwgKGVyciwgcmVzdWx0cykgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgaWYoZGVidWcpXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5p+l6K+i5aSx6LSl77yM5Y6f5ZugOicgKyBKU09OLnN0cmluZ2lmeShlcnIpKVxuICAgICAgICAgIHJlamVjdChlcnIpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYoZGVidWcpXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5p+l6K+i5oiQ5YqfJywgSlNPTi5zdHJpbmdpZnkocmVzdWx0cykpXG4gICAgICAgICAgaWYocmVzdWx0cyYmcmVzdWx0cy5sZW5ndGg9PT0xKVxuICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHRzWzBdKVxuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJlc29sdmUocmVzdWx0cylcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZWplY3QoZSlcbiAgICB9IGZpbmFsbHkge1xuICAgICAgY29ubi5lbmQoKVxuICAgIH1cbiAgfSlcbn1cblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcXVlcnlTcWxcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mysql",
        "require",
        "host",
        "user",
        "password",
        "database",
        "debug",
        "connect",
        "createConnection",
        "multipleStatements",
        "querySql",
        "sql",
        "conn",
        "console",
        "log",
        "Promise",
        "resolve",
        "reject",
        "query",
        "err",
        "results",
        "JSON",
        "stringify",
        "length",
        "e",
        "end",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA;AAAxB,IAAqCJ,OAAO,CAAC,UAAD,CAAlD;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAYL,OAAO,CAAC,mBAAD,CAAzB;;AAEA,SAASM,OAAT,GAAmB;AACjB,SAAOP,KAAK,CAACQ,gBAAN,CAAuB;AAC5BN,IAAAA,IAD4B;AAE5BC,IAAAA,IAF4B;AAG5BC,IAAAA,QAH4B;AAI5BC,IAAAA,QAJ4B;AAK5BI,IAAAA,kBAAkB,EAAE;AALQ,GAAvB,CAAP;AAOD;;AAED,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,QAAMC,IAAI,GAAGL,OAAO,EAApB;AACA,MAAGD,KAAH,EACEO,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACF,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAI;AACFL,MAAAA,IAAI,CAACM,KAAL,CAAWP,GAAX,EAAgB,CAACQ,GAAD,EAAMC,OAAN,KAAkB;AAChC,YAAID,GAAJ,EAAS;AACP,cAAGb,KAAH,EACEO,OAAO,CAACC,GAAR,CAAY,aAAaO,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAzB;AACFF,UAAAA,MAAM,CAACE,GAAD,CAAN;AACD,SAJD,MAIO;AACL,cAAGb,KAAH,EACEO,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBO,IAAI,CAACC,SAAL,CAAeF,OAAf,CAApB;AACF,cAAGA,OAAO,IAAEA,OAAO,CAACG,MAAR,KAAiB,CAA7B,EACEP,OAAO,CAACI,OAAO,CAAC,CAAD,CAAR,CAAP,CADF,KAGEJ,OAAO,CAACI,OAAD,CAAP;AACH;AACF,OAbD;AAcD,KAfD,CAeE,OAAOI,CAAP,EAAU;AACVP,MAAAA,MAAM,CAACO,CAAD,CAAN;AACD,KAjBD,SAiBU;AACRZ,MAAAA,IAAI,CAACa,GAAL;AACD;AACF,GArBM,CAAP;AAsBD;;AAGDC,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA;AADe,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\",
      "sourcesContent": [
        "const mysql = require('mysql')\nconst { host, user, password, database } = require('./config')\nconst { debug } = require('../utils/constant')\n\nfunction connect() {\n  return mysql.createConnection({\n    host,\n    user,\n    password,\n    database,\n    multipleStatements: true\n  })\n}\n\nfunction querySql(sql) {\n  const conn = connect()\n  if(debug)\n    console.log(sql)\n  return new Promise((resolve, reject) => {\n    try {\n      conn.query(sql, (err, results) => {\n        if (err) {\n          if(debug)\n            console.log('查询失败，原因:' + JSON.stringify(err))\n          reject(err)\n        } else {\n          if(debug)\n            console.log('查询成功', JSON.stringify(results))\n          if(results&&results.length===1)\n            resolve(results[0])\n          else\n            resolve(results)\n        }\n      })\n    } catch (e) {\n      reject(e)\n    } finally {\n      conn.end()\n    }\n  })\n}\n\n\nmodule.exports = {\n  querySql\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1587028561966
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\mysql\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\mysql\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "module.exports = {\n  host: 'localhost',\n  user: 'root',\n  password: '123456',\n  database: 'household'\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsImRhdGFiYXNlIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZDLEVBQUFBLElBQUksRUFBRSxXQURTO0FBRWZDLEVBQUFBLElBQUksRUFBRSxNQUZTO0FBR2ZDLEVBQUFBLFFBQVEsRUFBRSxRQUhLO0FBSWZDLEVBQUFBLFFBQVEsRUFBRTtBQUpLLENBQWpCIiwic291cmNlUm9vdCI6Ikc6XFxQcm9qZWN0XFxXZWJcXGdpdFxcaG91c2Vob2xkLXNlcnZpY2Utc2VydmVyXFxzcmNcXG15c3FsXFwiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gIHVzZXI6ICdyb290JyxcbiAgcGFzc3dvcmQ6ICcxMjM0NTYnLFxuICBkYXRhYmFzZTogJ2hvdXNlaG9sZCdcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "module",
        "exports",
        "host",
        "user",
        "password",
        "database"
      ],
      "mappings": "AAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAE,WADS;AAEfC,EAAAA,IAAI,EAAE,MAFS;AAGfC,EAAAA,QAAQ,EAAE,QAHK;AAIfC,EAAAA,QAAQ,EAAE;AAJK,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\mysql\\",
      "sourcesContent": [
        "module.exports = {\n  host: 'localhost',\n  user: 'root',\n  password: '123456',\n  database: 'household'\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1586758024337
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\encryption.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\encryption.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\encryption.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\encryption.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
        "sourceFileName": "encryption.js"
      }
    },
    "ast": null,
    "code": "const crypto = require('crypto');\n\nfunction md5(s) {\n  // 注意参数需要为 String 类型，否则会出错\n  return crypto.createHash('md5').update(String(s)).digest('hex');\n}\n\nmodule.exports = {\n  md5\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY3J5cHRpb24uanMiXSwibmFtZXMiOlsiY3J5cHRvIiwicmVxdWlyZSIsIm1kNSIsInMiLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiU3RyaW5nIiwiZGlnZXN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFFQSxTQUFTQyxHQUFULENBQWFDLENBQWIsRUFBZ0I7QUFDZDtBQUNBLFNBQU9ILE1BQU0sQ0FBQ0ksVUFBUCxDQUFrQixLQUFsQixFQUNKQyxNQURJLENBQ0dDLE1BQU0sQ0FBQ0gsQ0FBRCxDQURULEVBQ2NJLE1BRGQsQ0FDcUIsS0FEckIsQ0FBUDtBQUVEOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBZTtBQUNiUCxFQUFBQTtBQURhLENBQWYiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xcdXRpbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpXG5cbmZ1bmN0aW9uIG1kNShzKSB7XG4gIC8vIOazqOaEj+WPguaVsOmcgOimgeS4uiBTdHJpbmcg57G75Z6L77yM5ZCm5YiZ5Lya5Ye66ZSZXG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaCgnbWQ1JylcbiAgICAudXBkYXRlKFN0cmluZyhzKSkuZGlnZXN0KCdoZXgnKTtcbn1cblxubW9kdWxlLmV4cG9ydHM9e1xuICBtZDVcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "encryption.js"
      ],
      "names": [
        "crypto",
        "require",
        "md5",
        "s",
        "createHash",
        "update",
        "String",
        "digest",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,SAASC,GAAT,CAAaC,CAAb,EAAgB;AACd;AACA,SAAOH,MAAM,CAACI,UAAP,CAAkB,KAAlB,EACJC,MADI,CACGC,MAAM,CAACH,CAAD,CADT,EACcI,MADd,CACqB,KADrB,CAAP;AAED;;AAEDC,MAAM,CAACC,OAAP,GAAe;AACbP,EAAAA;AADa,CAAf",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "sourcesContent": [
        "const crypto = require('crypto')\n\nfunction md5(s) {\n  // 注意参数需要为 String 类型，否则会出错\n  return crypto.createHash('md5')\n    .update(String(s)).digest('hex');\n}\n\nmodule.exports={\n  md5\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1586767754707
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\decode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\decode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\decode.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\decode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
        "sourceFileName": "decode.js"
      }
    },
    "ast": null,
    "code": "const jwt = require('jsonwebtoken');\n\nconst {\n  PRIVATE_KEY\n} = require('./constant');\n\nfunction decode(req) {\n  const authorization = req.get('Authorization');\n  let token = '';\n\n  if (authorization.indexOf('Bearer') >= 0) {\n    token = authorization.replace('Bearer ', '');\n  } else {\n    token = authorization;\n  }\n\n  return jwt.verify(token, PRIVATE_KEY);\n}\n\nmodule.exports = {\n  decode\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY29kZS5qcyJdLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiUFJJVkFURV9LRVkiLCJkZWNvZGUiLCJyZXEiLCJhdXRob3JpemF0aW9uIiwiZ2V0IiwidG9rZW4iLCJpbmRleE9mIiwicmVwbGFjZSIsInZlcmlmeSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQWtCRCxPQUFPLENBQUMsWUFBRCxDQUEvQjs7QUFFQSxTQUFTRSxNQUFULENBQWdCQyxHQUFoQixFQUFxQjtBQUNuQixRQUFNQyxhQUFhLEdBQUdELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLGVBQVIsQ0FBdEI7QUFDQSxNQUFJQyxLQUFLLEdBQUcsRUFBWjs7QUFDQSxNQUFJRixhQUFhLENBQUNHLE9BQWQsQ0FBc0IsUUFBdEIsS0FBbUMsQ0FBdkMsRUFBMEM7QUFDeENELElBQUFBLEtBQUssR0FBR0YsYUFBYSxDQUFDSSxPQUFkLENBQXNCLFNBQXRCLEVBQWlDLEVBQWpDLENBQVI7QUFDRCxHQUZELE1BRU87QUFDTEYsSUFBQUEsS0FBSyxHQUFHRixhQUFSO0FBQ0Q7O0FBQ0QsU0FBT0wsR0FBRyxDQUFDVSxNQUFKLENBQVdILEtBQVgsRUFBa0JMLFdBQWxCLENBQVA7QUFDRDs7QUFFRFMsTUFBTSxDQUFDQyxPQUFQLEdBQWU7QUFDYlQsRUFBQUE7QUFEYSxDQUFmIiwic291cmNlUm9vdCI6Ikc6XFxQcm9qZWN0XFxXZWJcXGdpdFxcaG91c2Vob2xkLXNlcnZpY2Utc2VydmVyXFxzcmNcXHV0aWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKVxuY29uc3QgeyBQUklWQVRFX0tFWSB9ID0gcmVxdWlyZSgnLi9jb25zdGFudCcpXG5cbmZ1bmN0aW9uIGRlY29kZShyZXEpIHtcbiAgY29uc3QgYXV0aG9yaXphdGlvbiA9IHJlcS5nZXQoJ0F1dGhvcml6YXRpb24nKVxuICBsZXQgdG9rZW4gPSAnJ1xuICBpZiAoYXV0aG9yaXphdGlvbi5pbmRleE9mKCdCZWFyZXInKSA+PSAwKSB7XG4gICAgdG9rZW4gPSBhdXRob3JpemF0aW9uLnJlcGxhY2UoJ0JlYXJlciAnLCAnJylcbiAgfSBlbHNlIHtcbiAgICB0b2tlbiA9IGF1dGhvcml6YXRpb25cbiAgfVxuICByZXR1cm4gand0LnZlcmlmeSh0b2tlbiwgUFJJVkFURV9LRVkpXG59XG5cbm1vZHVsZS5leHBvcnRzPXtcbiAgZGVjb2RlXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "decode.js"
      ],
      "names": [
        "jwt",
        "require",
        "PRIVATE_KEY",
        "decode",
        "req",
        "authorization",
        "get",
        "token",
        "indexOf",
        "replace",
        "verify",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,OAAO,CAAC,YAAD,CAA/B;;AAEA,SAASE,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,QAAMC,aAAa,GAAGD,GAAG,CAACE,GAAJ,CAAQ,eAAR,CAAtB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAIF,aAAa,CAACG,OAAd,CAAsB,QAAtB,KAAmC,CAAvC,EAA0C;AACxCD,IAAAA,KAAK,GAAGF,aAAa,CAACI,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAAR;AACD,GAFD,MAEO;AACLF,IAAAA,KAAK,GAAGF,aAAR;AACD;;AACD,SAAOL,GAAG,CAACU,MAAJ,CAAWH,KAAX,EAAkBL,WAAlB,CAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAe;AACbT,EAAAA;AADa,CAAf",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken')\nconst { PRIVATE_KEY } = require('./constant')\n\nfunction decode(req) {\n  const authorization = req.get('Authorization')\n  let token = ''\n  if (authorization.indexOf('Bearer') >= 0) {\n    token = authorization.replace('Bearer ', '')\n  } else {\n    token = authorization\n  }\n  return jwt.verify(token, PRIVATE_KEY)\n}\n\nmodule.exports={\n  decode\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1586796295487
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\staff.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\staff.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\staff.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\staff.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
        "sourceFileName": "staff.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst Result = require('../models/Result');\n\nconst {\n  create,\n  list,\n  update,\n  remove\n} = require('../service/staff');\n\nconst {\n  decode\n} = require('../utils/decode');\n\nconst {\n  increase\n} = require('../utils/auto-increase');\n\nconst {\n  SOURCE_PATH,\n  UPLOAD_PATH\n} = require('../utils/constant');\n\nconst fs = require('fs');\n\nconst router = express.Router();\nrouter.post('/create', (req, res) => {\n  const decoded = decode(req);\n  const {\n    name,\n    sex,\n    entryDate,\n    profile,\n    vocation,\n    age,\n    filename\n  } = req.body;\n  const picture = `${SOURCE_PATH}/avatar/` + filename;\n\n  if (decoded && decoded.username) {\n    list().then(result => {\n      let data = new Result(result, '查询成功').data;\n      create(increase(data, 'staffID'), name, sex, entryDate, profile, vocation, age, picture).then(result => {\n        if (result) {\n          new Result('新增员工成功').success(res);\n        } else {\n          new Result('新增员工失败').fail(res);\n        }\n      });\n    });\n  } else {\n    new Result('解析失败').fail(res);\n  }\n});\nrouter.get('/list', (req, res) => {\n  list().then(result => {\n    if (result) {\n      new Result(result, '查询成功').success(res);\n    } else {\n      new Result('查询失败').fail(res);\n    }\n  });\n});\nrouter.post('/update', (req, res) => {\n  const {\n    staffID,\n    name,\n    sex,\n    entryDate,\n    profile,\n    vocation,\n    age\n  } = req.body;\n  const {\n    filename\n  } = req.body;\n  let ori;\n  let oriFile;\n  let picture;\n\n  if (filename) {\n    ori = req.body.ori.split('/').pop();\n    oriFile = `${UPLOAD_PATH}/avatar/` + ori;\n    picture = `${SOURCE_PATH}/avatar/` + filename;\n  }\n\n  update(staffID, name, sex, entryDate, profile, vocation, age, picture).then(result => {\n    if (result) {\n      new Result(result, '编辑成功').success(res);\n\n      if (filename) {\n        fs.unlink(oriFile, function (err) {\n          if (err) {\n            console.log(err);\n          }\n        });\n      }\n    } else {\n      new Result('编辑失败').fail(res);\n    }\n  });\n});\nrouter.post('/remove', (req, res) => {\n  const ori = req.body.url.split('/').pop();\n  const oriFile = `${UPLOAD_PATH}/avatar/` + ori;\n  remove(req.body.id).then(result => {\n    if (result) {\n      new Result('删除成功').success(res);\n      fs.unlink(oriFile, function (err) {\n        if (err) {\n          throw err;\n        }\n      });\n    } else {\n      new Result('删除失败').fail(res);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "staff.js"
      ],
      "names": [
        "express",
        "require",
        "Result",
        "create",
        "list",
        "update",
        "remove",
        "decode",
        "increase",
        "SOURCE_PATH",
        "UPLOAD_PATH",
        "fs",
        "router",
        "Router",
        "post",
        "req",
        "res",
        "decoded",
        "name",
        "sex",
        "entryDate",
        "profile",
        "vocation",
        "age",
        "filename",
        "body",
        "picture",
        "username",
        "then",
        "result",
        "data",
        "success",
        "fail",
        "get",
        "staffID",
        "ori",
        "oriFile",
        "split",
        "pop",
        "unlink",
        "err",
        "console",
        "log",
        "url",
        "id",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "sourcesContent": [
        "const express = require('express')\nconst Result = require('../models/Result')\nconst { create, list, update, remove } = require('../service/staff')\nconst { decode } = require('../utils/decode')\nconst { increase } = require('../utils/auto-increase')\nconst { SOURCE_PATH, UPLOAD_PATH } = require('../utils/constant')\nconst fs = require('fs')\n\nconst router = express.Router()\n\nrouter.post('/create', (req, res) => {\n  const decoded = decode(req)\n  const { name, sex, entryDate, profile, vocation, age, filename } = req.body\n  const picture = `${SOURCE_PATH}/avatar/` + filename\n  if (decoded && decoded.username) {\n    list().then(result => {\n      let data = new Result(result, '查询成功').data\n      create(increase(data, 'staffID'), name, sex, entryDate, profile, vocation, age, picture).then(result => {\n        if (result) {\n          new Result('新增员工成功').success(res)\n        } else {\n          new Result('新增员工失败').fail(res)\n        }\n      })\n    })\n  } else {\n    new Result('解析失败').fail(res)\n  }\n})\n\nrouter.get('/list', (req, res) => {\n  list().then(result => {\n    if (result) {\n      new Result(result, '查询成功').success(res)\n    } else {\n      new Result('查询失败').fail(res)\n    }\n  })\n})\n\nrouter.post('/update', (req, res) => {\n  const { staffID, name, sex, entryDate, profile, vocation, age } = req.body\n  const { filename } = req.body\n  let ori\n  let oriFile\n  let picture\n  if (filename) {\n    ori = req.body.ori.split('/').pop()\n    oriFile = `${UPLOAD_PATH}/avatar/` + ori\n    picture = `${SOURCE_PATH}/avatar/` + filename\n  }\n  update(staffID, name, sex, entryDate, profile, vocation, age, picture).then(result => {\n    if (result) {\n      new Result(result, '编辑成功').success(res)\n      if (filename) {\n        fs.unlink(oriFile, function (err) {\n          if (err) { console.log(err) }\n        })\n      }\n    } else {\n      new Result('编辑失败').fail(res)\n    }\n  })\n})\n\nrouter.post('/remove', (req, res) => {\n  const ori = req.body.url.split('/').pop()\n  const oriFile = `${UPLOAD_PATH}/avatar/` + ori\n  remove(req.body.id).then(result => {\n    if (result) {\n      new Result('删除成功').success(res)\n      fs.unlink(oriFile, function (err) {\n        if (err) { throw err }\n      })\n    } else {\n      new Result('删除失败').fail(res)\n    }\n  })\n})\n\nmodule.exports = router\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1587379366822
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\staff.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\staff.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\staff.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\staff.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
        "sourceFileName": "staff.js"
      }
    },
    "ast": null,
    "code": "const {\n  querySql\n} = require('../mysql');\n\nfunction create(staffID, name, sex, entryDate, profile, vocation, age, picture) {\n  const sql = `insert into staff(staffID,name,sex,entryDate,profile,vocation,age,picture) \n  values('${staffID}','${name}','${sex}','${entryDate}','${profile}','${vocation}','${age}','${picture}')`;\n  return querySql(sql);\n}\n\nfunction list(staffID) {\n  let sql;\n\n  if (staffID) {\n    sql = `select * from staff where staffID='${staffID}'`;\n  } else {\n    sql = `select * from staff`;\n  }\n\n  return querySql(sql);\n}\n\nfunction update(staffID, name, sex, entryDate, profile, vocation, age, picture) {\n  if (picture) {\n    const sql = `update staff set \n    name='${name}', sex='${sex}', entryDate='${entryDate}', profile='${profile}', vocation='${vocation}', age='${age}', picture='${picture}'\n    where staffID='${staffID}'`;\n    return querySql(sql);\n  } else {\n    const sql = `update staff set \n    name='${name}', sex='${sex}', entryDate='${entryDate}', profile='${profile}', vocation='${vocation}', age='${age}'\n    where staffID='${staffID}'`;\n    return querySql(sql);\n  }\n}\n\nfunction remove(staffID) {\n  console.log(staffID);\n  const sql = `DELETE FROM staff WHERE staffID='${staffID}'`;\n  return querySql(sql);\n}\n\nmodule.exports = {\n  create,\n  list,\n  update,\n  remove\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YWZmLmpzIl0sIm5hbWVzIjpbInF1ZXJ5U3FsIiwicmVxdWlyZSIsImNyZWF0ZSIsInN0YWZmSUQiLCJuYW1lIiwic2V4IiwiZW50cnlEYXRlIiwicHJvZmlsZSIsInZvY2F0aW9uIiwiYWdlIiwicGljdHVyZSIsInNxbCIsImxpc3QiLCJ1cGRhdGUiLCJyZW1vdmUiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQWVDLE9BQU8sQ0FBQyxVQUFELENBQTVCOztBQUVBLFNBQVNDLE1BQVQsQ0FBZ0JDLE9BQWhCLEVBQXlCQyxJQUF6QixFQUErQkMsR0FBL0IsRUFBb0NDLFNBQXBDLEVBQStDQyxPQUEvQyxFQUF3REMsUUFBeEQsRUFBa0VDLEdBQWxFLEVBQXVFQyxPQUF2RSxFQUFnRjtBQUM5RSxRQUFNQyxHQUFHLEdBQUk7WUFDSFIsT0FBUSxNQUFLQyxJQUFLLE1BQUtDLEdBQUksTUFBS0MsU0FBVSxNQUFLQyxPQUFRLE1BQUtDLFFBQVMsTUFBS0MsR0FBSSxNQUFLQyxPQUFRLElBRHJHO0FBRUEsU0FBT1YsUUFBUSxDQUFDVyxHQUFELENBQWY7QUFDRDs7QUFFRCxTQUFTQyxJQUFULENBQWNULE9BQWQsRUFBdUI7QUFDckIsTUFBSVEsR0FBSjs7QUFDQSxNQUFJUixPQUFKLEVBQWE7QUFDWFEsSUFBQUEsR0FBRyxHQUFJLHNDQUFxQ1IsT0FBUSxHQUFwRDtBQUNELEdBRkQsTUFFTztBQUNMUSxJQUFBQSxHQUFHLEdBQUkscUJBQVA7QUFDRDs7QUFDRCxTQUFPWCxRQUFRLENBQUNXLEdBQUQsQ0FBZjtBQUNEOztBQUVELFNBQVNFLE1BQVQsQ0FBZ0JWLE9BQWhCLEVBQXlCQyxJQUF6QixFQUErQkMsR0FBL0IsRUFBb0NDLFNBQXBDLEVBQStDQyxPQUEvQyxFQUF3REMsUUFBeEQsRUFBa0VDLEdBQWxFLEVBQXVFQyxPQUF2RSxFQUFnRjtBQUM5RSxNQUFJQSxPQUFKLEVBQWE7QUFDWCxVQUFNQyxHQUFHLEdBQUk7WUFDTFAsSUFBSyxXQUFVQyxHQUFJLGlCQUFnQkMsU0FBVSxlQUFjQyxPQUFRLGdCQUFlQyxRQUFTLFdBQVVDLEdBQUksZUFBY0MsT0FBUTtxQkFDdEhQLE9BQVEsR0FGekI7QUFHQSxXQUFPSCxRQUFRLENBQUNXLEdBQUQsQ0FBZjtBQUNELEdBTEQsTUFNSztBQUNILFVBQU1BLEdBQUcsR0FBSTtZQUNMUCxJQUFLLFdBQVVDLEdBQUksaUJBQWdCQyxTQUFVLGVBQWNDLE9BQVEsZ0JBQWVDLFFBQVMsV0FBVUMsR0FBSTtxQkFDaEdOLE9BQVEsR0FGekI7QUFHQSxXQUFPSCxRQUFRLENBQUNXLEdBQUQsQ0FBZjtBQUNEO0FBQ0Y7O0FBRUQsU0FBU0csTUFBVCxDQUFnQlgsT0FBaEIsRUFBeUI7QUFDdkJZLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYixPQUFaO0FBQ0EsUUFBTVEsR0FBRyxHQUFJLG9DQUFtQ1IsT0FBUSxHQUF4RDtBQUNBLFNBQU9ILFFBQVEsQ0FBQ1csR0FBRCxDQUFmO0FBQ0Q7O0FBRURNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmaEIsRUFBQUEsTUFEZTtBQUVmVSxFQUFBQSxJQUZlO0FBR2ZDLEVBQUFBLE1BSGU7QUFJZkMsRUFBQUE7QUFKZSxDQUFqQiIsInNvdXJjZVJvb3QiOiJHOlxcUHJvamVjdFxcV2ViXFxnaXRcXGhvdXNlaG9sZC1zZXJ2aWNlLXNlcnZlclxcc3JjXFxzZXJ2aWNlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHF1ZXJ5U3FsIH0gPSByZXF1aXJlKCcuLi9teXNxbCcpO1xuXG5mdW5jdGlvbiBjcmVhdGUoc3RhZmZJRCwgbmFtZSwgc2V4LCBlbnRyeURhdGUsIHByb2ZpbGUsIHZvY2F0aW9uLCBhZ2UsIHBpY3R1cmUpIHtcbiAgY29uc3Qgc3FsID0gYGluc2VydCBpbnRvIHN0YWZmKHN0YWZmSUQsbmFtZSxzZXgsZW50cnlEYXRlLHByb2ZpbGUsdm9jYXRpb24sYWdlLHBpY3R1cmUpIFxuICB2YWx1ZXMoJyR7c3RhZmZJRH0nLCcke25hbWV9JywnJHtzZXh9JywnJHtlbnRyeURhdGV9JywnJHtwcm9maWxlfScsJyR7dm9jYXRpb259JywnJHthZ2V9JywnJHtwaWN0dXJlfScpYFxuICByZXR1cm4gcXVlcnlTcWwoc3FsKVxufVxuXG5mdW5jdGlvbiBsaXN0KHN0YWZmSUQpIHtcbiAgbGV0IHNxbFxuICBpZiAoc3RhZmZJRCkge1xuICAgIHNxbCA9IGBzZWxlY3QgKiBmcm9tIHN0YWZmIHdoZXJlIHN0YWZmSUQ9JyR7c3RhZmZJRH0nYFxuICB9IGVsc2Uge1xuICAgIHNxbCA9IGBzZWxlY3QgKiBmcm9tIHN0YWZmYFxuICB9XG4gIHJldHVybiBxdWVyeVNxbChzcWwpXG59XG5cbmZ1bmN0aW9uIHVwZGF0ZShzdGFmZklELCBuYW1lLCBzZXgsIGVudHJ5RGF0ZSwgcHJvZmlsZSwgdm9jYXRpb24sIGFnZSwgcGljdHVyZSkge1xuICBpZiAocGljdHVyZSkge1xuICAgIGNvbnN0IHNxbCA9IGB1cGRhdGUgc3RhZmYgc2V0IFxuICAgIG5hbWU9JyR7bmFtZX0nLCBzZXg9JyR7c2V4fScsIGVudHJ5RGF0ZT0nJHtlbnRyeURhdGV9JywgcHJvZmlsZT0nJHtwcm9maWxlfScsIHZvY2F0aW9uPScke3ZvY2F0aW9ufScsIGFnZT0nJHthZ2V9JywgcGljdHVyZT0nJHtwaWN0dXJlfSdcbiAgICB3aGVyZSBzdGFmZklEPScke3N0YWZmSUR9J2BcbiAgICByZXR1cm4gcXVlcnlTcWwoc3FsKVxuICB9XG4gIGVsc2Uge1xuICAgIGNvbnN0IHNxbCA9IGB1cGRhdGUgc3RhZmYgc2V0IFxuICAgIG5hbWU9JyR7bmFtZX0nLCBzZXg9JyR7c2V4fScsIGVudHJ5RGF0ZT0nJHtlbnRyeURhdGV9JywgcHJvZmlsZT0nJHtwcm9maWxlfScsIHZvY2F0aW9uPScke3ZvY2F0aW9ufScsIGFnZT0nJHthZ2V9J1xuICAgIHdoZXJlIHN0YWZmSUQ9JyR7c3RhZmZJRH0nYFxuICAgIHJldHVybiBxdWVyeVNxbChzcWwpXG4gIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlKHN0YWZmSUQpIHtcbiAgY29uc29sZS5sb2coc3RhZmZJRClcbiAgY29uc3Qgc3FsID0gYERFTEVURSBGUk9NIHN0YWZmIFdIRVJFIHN0YWZmSUQ9JyR7c3RhZmZJRH0nYFxuICByZXR1cm4gcXVlcnlTcWwoc3FsKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlLFxuICBsaXN0LFxuICB1cGRhdGUsXG4gIHJlbW92ZVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "staff.js"
      ],
      "names": [
        "querySql",
        "require",
        "create",
        "staffID",
        "name",
        "sex",
        "entryDate",
        "profile",
        "vocation",
        "age",
        "picture",
        "sql",
        "list",
        "update",
        "remove",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,OAAO,CAAC,UAAD,CAA5B;;AAEA,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,SAApC,EAA+CC,OAA/C,EAAwDC,QAAxD,EAAkEC,GAAlE,EAAuEC,OAAvE,EAAgF;AAC9E,QAAMC,GAAG,GAAI;YACHR,OAAQ,MAAKC,IAAK,MAAKC,GAAI,MAAKC,SAAU,MAAKC,OAAQ,MAAKC,QAAS,MAAKC,GAAI,MAAKC,OAAQ,IADrG;AAEA,SAAOV,QAAQ,CAACW,GAAD,CAAf;AACD;;AAED,SAASC,IAAT,CAAcT,OAAd,EAAuB;AACrB,MAAIQ,GAAJ;;AACA,MAAIR,OAAJ,EAAa;AACXQ,IAAAA,GAAG,GAAI,sCAAqCR,OAAQ,GAApD;AACD,GAFD,MAEO;AACLQ,IAAAA,GAAG,GAAI,qBAAP;AACD;;AACD,SAAOX,QAAQ,CAACW,GAAD,CAAf;AACD;;AAED,SAASE,MAAT,CAAgBV,OAAhB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,SAApC,EAA+CC,OAA/C,EAAwDC,QAAxD,EAAkEC,GAAlE,EAAuEC,OAAvE,EAAgF;AAC9E,MAAIA,OAAJ,EAAa;AACX,UAAMC,GAAG,GAAI;YACLP,IAAK,WAAUC,GAAI,iBAAgBC,SAAU,eAAcC,OAAQ,gBAAeC,QAAS,WAAUC,GAAI,eAAcC,OAAQ;qBACtHP,OAAQ,GAFzB;AAGA,WAAOH,QAAQ,CAACW,GAAD,CAAf;AACD,GALD,MAMK;AACH,UAAMA,GAAG,GAAI;YACLP,IAAK,WAAUC,GAAI,iBAAgBC,SAAU,eAAcC,OAAQ,gBAAeC,QAAS,WAAUC,GAAI;qBAChGN,OAAQ,GAFzB;AAGA,WAAOH,QAAQ,CAACW,GAAD,CAAf;AACD;AACF;;AAED,SAASG,MAAT,CAAgBX,OAAhB,EAAyB;AACvBY,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACA,QAAMQ,GAAG,GAAI,oCAAmCR,OAAQ,GAAxD;AACA,SAAOH,QAAQ,CAACW,GAAD,CAAf;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,MADe;AAEfU,EAAAA,IAFe;AAGfC,EAAAA,MAHe;AAIfC,EAAAA;AAJe,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "sourcesContent": [
        "const { querySql } = require('../mysql');\n\nfunction create(staffID, name, sex, entryDate, profile, vocation, age, picture) {\n  const sql = `insert into staff(staffID,name,sex,entryDate,profile,vocation,age,picture) \n  values('${staffID}','${name}','${sex}','${entryDate}','${profile}','${vocation}','${age}','${picture}')`\n  return querySql(sql)\n}\n\nfunction list(staffID) {\n  let sql\n  if (staffID) {\n    sql = `select * from staff where staffID='${staffID}'`\n  } else {\n    sql = `select * from staff`\n  }\n  return querySql(sql)\n}\n\nfunction update(staffID, name, sex, entryDate, profile, vocation, age, picture) {\n  if (picture) {\n    const sql = `update staff set \n    name='${name}', sex='${sex}', entryDate='${entryDate}', profile='${profile}', vocation='${vocation}', age='${age}', picture='${picture}'\n    where staffID='${staffID}'`\n    return querySql(sql)\n  }\n  else {\n    const sql = `update staff set \n    name='${name}', sex='${sex}', entryDate='${entryDate}', profile='${profile}', vocation='${vocation}', age='${age}'\n    where staffID='${staffID}'`\n    return querySql(sql)\n  }\n}\n\nfunction remove(staffID) {\n  console.log(staffID)\n  const sql = `DELETE FROM staff WHERE staffID='${staffID}'`\n  return querySql(sql)\n}\n\nmodule.exports = {\n  create,\n  list,\n  update,\n  remove\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1587372132528
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\utils\\\\auto-increase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\auto-increase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\auto-increase.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\auto-increase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
        "sourceFileName": "auto-increase.js"
      }
    },
    "ast": null,
    "code": "function increase(data, id) {\n  if (data && Array.isArray(data)) {\n    let i = 3;\n\n    for (i = 1; i <= 100; i++) {\n      if (data.every(e => +e[id] !== i)) {\n        break;\n      }\n    }\n\n    if (i < 10) {\n      return '00' + i;\n    } else {\n      return '0' + i;\n    }\n  } else if (!data) {\n    return '001';\n  } else {\n    let i;\n\n    for (i = 1; i <= 100; i++) {\n      if (i !== +data[id]) {\n        break;\n      }\n    }\n\n    if (i < 10) {\n      return '00' + i;\n    } else {\n      return '0' + i;\n    }\n  }\n}\n\nmodule.exports = {\n  increase\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dG8taW5jcmVhc2UuanMiXSwibmFtZXMiOlsiaW5jcmVhc2UiLCJkYXRhIiwiaWQiLCJBcnJheSIsImlzQXJyYXkiLCJpIiwiZXZlcnkiLCJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsUUFBVCxDQUFrQkMsSUFBbEIsRUFBd0JDLEVBQXhCLEVBQTRCO0FBQzFCLE1BQUlELElBQUksSUFBSUUsS0FBSyxDQUFDQyxPQUFOLENBQWNILElBQWQsQ0FBWixFQUFpQztBQUMvQixRQUFJSSxDQUFDLEdBQUcsQ0FBUjs7QUFDQSxTQUFLQSxDQUFDLEdBQUcsQ0FBVCxFQUFZQSxDQUFDLElBQUksR0FBakIsRUFBc0JBLENBQUMsRUFBdkIsRUFBMkI7QUFDekIsVUFBSUosSUFBSSxDQUFDSyxLQUFMLENBQVdDLENBQUMsSUFBSSxDQUFDQSxDQUFDLENBQUNMLEVBQUQsQ0FBRixLQUFXRyxDQUEzQixDQUFKLEVBQW1DO0FBQ2pDO0FBQ0Q7QUFDRjs7QUFDRCxRQUFJQSxDQUFDLEdBQUcsRUFBUixFQUFZO0FBQ1YsYUFBUSxPQUFPQSxDQUFmO0FBQ0QsS0FGRCxNQUdLO0FBQ0gsYUFBUSxNQUFNQSxDQUFkO0FBQ0Q7QUFDRixHQWJELE1BY0ssSUFBSSxDQUFDSixJQUFMLEVBQVc7QUFDZCxXQUFRLEtBQVI7QUFDRCxHQUZJLE1BR0E7QUFDSCxRQUFJSSxDQUFKOztBQUNBLFNBQUtBLENBQUMsR0FBRyxDQUFULEVBQVlBLENBQUMsSUFBSSxHQUFqQixFQUFzQkEsQ0FBQyxFQUF2QixFQUEyQjtBQUN6QixVQUFJQSxDQUFDLEtBQUssQ0FBQ0osSUFBSSxDQUFDQyxFQUFELENBQWYsRUFBcUI7QUFDbkI7QUFDRDtBQUNGOztBQUNELFFBQUlHLENBQUMsR0FBRyxFQUFSLEVBQVk7QUFDVixhQUFRLE9BQU9BLENBQWY7QUFDRCxLQUZELE1BR0s7QUFDSCxhQUFRLE1BQU1BLENBQWQ7QUFDRDtBQUNGO0FBQ0Y7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmVCxFQUFBQTtBQURlLENBQWpCIiwic291cmNlUm9vdCI6Ikc6XFxQcm9qZWN0XFxXZWJcXGdpdFxcaG91c2Vob2xkLXNlcnZpY2Utc2VydmVyXFxzcmNcXHV0aWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpbmNyZWFzZShkYXRhLCBpZCkge1xuICBpZiAoZGF0YSAmJiBBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgbGV0IGkgPSAzXG4gICAgZm9yIChpID0gMTsgaSA8PSAxMDA7IGkrKykge1xuICAgICAgaWYgKGRhdGEuZXZlcnkoZSA9PiArZVtpZF0gIT09IGkpKSB7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpIDwgMTApIHtcbiAgICAgIHJldHVybiAoJzAwJyArIGkpXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgcmV0dXJuICgnMCcgKyBpKVxuICAgIH1cbiAgfVxuICBlbHNlIGlmICghZGF0YSkge1xuICAgIHJldHVybiAoJzAwMScpXG4gIH1cbiAgZWxzZSB7XG4gICAgbGV0IGlcbiAgICBmb3IgKGkgPSAxOyBpIDw9IDEwMDsgaSsrKSB7XG4gICAgICBpZiAoaSAhPT0gK2RhdGFbaWRdKSB7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpIDwgMTApIHtcbiAgICAgIHJldHVybiAoJzAwJyArIGkpXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgcmV0dXJuICgnMCcgKyBpKVxuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5jcmVhc2Vcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auto-increase.js"
      ],
      "names": [
        "increase",
        "data",
        "id",
        "Array",
        "isArray",
        "i",
        "every",
        "e",
        "module",
        "exports"
      ],
      "mappings": "AAAA,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,EAAxB,EAA4B;AAC1B,MAAID,IAAI,IAAIE,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAZ,EAAiC;AAC/B,QAAII,CAAC,GAAG,CAAR;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,GAAjB,EAAsBA,CAAC,EAAvB,EAA2B;AACzB,UAAIJ,IAAI,CAACK,KAAL,CAAWC,CAAC,IAAI,CAACA,CAAC,CAACL,EAAD,CAAF,KAAWG,CAA3B,CAAJ,EAAmC;AACjC;AACD;AACF;;AACD,QAAIA,CAAC,GAAG,EAAR,EAAY;AACV,aAAQ,OAAOA,CAAf;AACD,KAFD,MAGK;AACH,aAAQ,MAAMA,CAAd;AACD;AACF,GAbD,MAcK,IAAI,CAACJ,IAAL,EAAW;AACd,WAAQ,KAAR;AACD,GAFI,MAGA;AACH,QAAII,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,GAAjB,EAAsBA,CAAC,EAAvB,EAA2B;AACzB,UAAIA,CAAC,KAAK,CAACJ,IAAI,CAACC,EAAD,CAAf,EAAqB;AACnB;AACD;AACF;;AACD,QAAIG,CAAC,GAAG,EAAR,EAAY;AACV,aAAQ,OAAOA,CAAf;AACD,KAFD,MAGK;AACH,aAAQ,MAAMA,CAAd;AACD;AACF;AACF;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA;AADe,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\utils\\",
      "sourcesContent": [
        "function increase(data, id) {\n  if (data && Array.isArray(data)) {\n    let i = 3\n    for (i = 1; i <= 100; i++) {\n      if (data.every(e => +e[id] !== i)) {\n        break\n      }\n    }\n    if (i < 10) {\n      return ('00' + i)\n    }\n    else {\n      return ('0' + i)\n    }\n  }\n  else if (!data) {\n    return ('001')\n  }\n  else {\n    let i\n    for (i = 1; i <= 100; i++) {\n      if (i !== +data[id]) {\n        break\n      }\n    }\n    if (i < 10) {\n      return ('00' + i)\n    }\n    else {\n      return ('0' + i)\n    }\n  }\n}\n\nmodule.exports = {\n  increase\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1587474959446
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\jwt.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\jwt.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\jwt.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\jwt.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
        "sourceFileName": "jwt.js"
      }
    },
    "ast": null,
    "code": "const expressJwt = require('express-jwt');\n\nconst {\n  PRIVATE_KEY\n} = require('../utils/constant');\n\nconst jwtAuth = expressJwt({\n  secret: PRIVATE_KEY,\n  credentialsRequired: true // 设置为false就不进行校验了，游客也可以访问\n\n}).unless({\n  path: ['/', '/user/login'] // 设置 jwt 认证白名单\n\n});\nmodule.exports = {\n  jwtAuth\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC5qcyJdLCJuYW1lcyI6WyJleHByZXNzSnd0IiwicmVxdWlyZSIsIlBSSVZBVEVfS0VZIiwiand0QXV0aCIsInNlY3JldCIsImNyZWRlbnRpYWxzUmVxdWlyZWQiLCJ1bmxlc3MiLCJwYXRoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBa0JELE9BQU8sQ0FBQyxtQkFBRCxDQUEvQjs7QUFFQSxNQUFNRSxPQUFPLEdBQUdILFVBQVUsQ0FBQztBQUN6QkksRUFBQUEsTUFBTSxFQUFFRixXQURpQjtBQUV6QkcsRUFBQUEsbUJBQW1CLEVBQUUsSUFGSSxDQUVDOztBQUZELENBQUQsQ0FBVixDQUdiQyxNQUhhLENBR047QUFDUkMsRUFBQUEsSUFBSSxFQUFFLENBQ0osR0FESSxFQUVKLGFBRkksQ0FERSxDQUlMOztBQUpLLENBSE0sQ0FBaEI7QUFVQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVOLEVBQUFBO0FBQUYsQ0FBakIiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xccm91dGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzSnd0ID0gcmVxdWlyZSgnZXhwcmVzcy1qd3QnKTtcbmNvbnN0IHsgUFJJVkFURV9LRVkgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2NvbnN0YW50Jyk7XG5cbmNvbnN0IGp3dEF1dGggPSBleHByZXNzSnd0KHtcbiAgc2VjcmV0OiBQUklWQVRFX0tFWSxcbiAgY3JlZGVudGlhbHNSZXF1aXJlZDogdHJ1ZSAvLyDorr7nva7kuLpmYWxzZeWwseS4jei/m+ihjOagoemqjOS6hu+8jOa4uOWuouS5n+WPr+S7peiuv+mXrlxufSkudW5sZXNzKHtcbiAgcGF0aDogW1xuICAgICcvJyxcbiAgICAnL3VzZXIvbG9naW4nXG4gIF0sIC8vIOiuvue9riBqd3Qg6K6k6K+B55m95ZCN5Y2VXG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgand0QXV0aCB9Il19",
    "map": {
      "version": 3,
      "sources": [
        "jwt.js"
      ],
      "names": [
        "expressJwt",
        "require",
        "PRIVATE_KEY",
        "jwtAuth",
        "secret",
        "credentialsRequired",
        "unless",
        "path",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,OAAO,GAAGH,UAAU,CAAC;AACzBI,EAAAA,MAAM,EAAEF,WADiB;AAEzBG,EAAAA,mBAAmB,EAAE,IAFI,CAEC;;AAFD,CAAD,CAAV,CAGbC,MAHa,CAGN;AACRC,EAAAA,IAAI,EAAE,CACJ,GADI,EAEJ,aAFI,CADE,CAIL;;AAJK,CAHM,CAAhB;AAUAC,MAAM,CAACC,OAAP,GAAiB;AAAEN,EAAAA;AAAF,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "sourcesContent": [
        "const expressJwt = require('express-jwt');\nconst { PRIVATE_KEY } = require('../utils/constant');\n\nconst jwtAuth = expressJwt({\n  secret: PRIVATE_KEY,\n  credentialsRequired: true // 设置为false就不进行校验了，游客也可以访问\n}).unless({\n  path: [\n    '/',\n    '/user/login'\n  ], // 设置 jwt 认证白名单\n})\n\nmodule.exports = { jwtAuth }"
      ]
    },
    "sourceType": "module",
    "mtime": 1586786597865
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\upload.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\upload.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\upload.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\upload.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
        "sourceFileName": "upload.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst Result = require('../models/Result');\n\nconst {\n  UPLOAD_PATH\n} = require('../utils/constant');\n\nconst multer = require('multer');\n\nconst router = express.Router();\nvar storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, `${UPLOAD_PATH}/avatar`);\n  },\n  filename: function (req, file, cb) {\n    const filename = Date.now() + '.' + file.mimetype.slice(6);\n    cb(null, filename);\n  }\n});\nrouter.post('/avatar', multer({\n  storage: storage\n}).single('file'), function (req, res) {\n  if (!req.file || req.file.length === 0) {\n    new Result('上传失败').fail(res);\n  } else {\n    new Result(req.file.filename, '上传成功').success(res);\n  }\n});\nrouter.post('/show', multer({\n  storage: multer.diskStorage({\n    destination: function (req, file, cb) {\n      cb(null, `${UPLOAD_PATH}/show`);\n    },\n    filename: function (req, file, cb) {\n      const filename = Date.now() + '.' + file.mimetype.slice(6);\n      cb(null, filename);\n    }\n  })\n}).single('file', 4), (req, res) => {\n  if (!req.file || req.file.length === 0) {\n    new Result('上传失败').fail(res);\n  } else {\n    new Result(req.file.filename, '上传成功').success(res);\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwbG9hZC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIlJlc3VsdCIsIlVQTE9BRF9QQVRIIiwibXVsdGVyIiwicm91dGVyIiwiUm91dGVyIiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2IiLCJmaWxlbmFtZSIsIkRhdGUiLCJub3ciLCJtaW1ldHlwZSIsInNsaWNlIiwicG9zdCIsInNpbmdsZSIsInJlcyIsImxlbmd0aCIsImZhaWwiLCJzdWNjZXNzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxrQkFBRCxDQUF0Qjs7QUFDQSxNQUFNO0FBQUVFLEVBQUFBO0FBQUYsSUFBa0JGLE9BQU8sQ0FBQyxtQkFBRCxDQUEvQjs7QUFDQSxNQUFNRyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBLE1BQU1JLE1BQU0sR0FBR0wsT0FBTyxDQUFDTSxNQUFSLEVBQWY7QUFFQSxJQUFJQyxPQUFPLEdBQUdILE1BQU0sQ0FBQ0ksV0FBUCxDQUFtQjtBQUMvQkMsRUFBQUEsV0FBVyxFQUFFLFVBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQkMsRUFBckIsRUFBeUI7QUFDcENBLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQVEsR0FBRVQsV0FBWSxTQUF0QixDQUFGO0FBQ0QsR0FIOEI7QUFJL0JVLEVBQUFBLFFBQVEsRUFBRSxVQUFVSCxHQUFWLEVBQWVDLElBQWYsRUFBcUJDLEVBQXJCLEVBQXlCO0FBQ2pDLFVBQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxHQUFMLEtBQVcsR0FBWCxHQUFlSixJQUFJLENBQUNLLFFBQUwsQ0FBY0MsS0FBZCxDQUFvQixDQUFwQixDQUFoQztBQUNBTCxJQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPQyxRQUFQLENBQUY7QUFDRDtBQVA4QixDQUFuQixDQUFkO0FBVUFSLE1BQU0sQ0FBQ2EsSUFBUCxDQUFZLFNBQVosRUFDRWQsTUFBTSxDQUFDO0FBQ0xHLEVBQUFBLE9BQU8sRUFBRUE7QUFESixDQUFELENBQU4sQ0FFR1ksTUFGSCxDQUVVLE1BRlYsQ0FERixFQUlFLFVBQVVULEdBQVYsRUFBZVUsR0FBZixFQUFvQjtBQUNsQixNQUFJLENBQUNWLEdBQUcsQ0FBQ0MsSUFBTCxJQUFhRCxHQUFHLENBQUNDLElBQUosQ0FBU1UsTUFBVCxLQUFvQixDQUFyQyxFQUF3QztBQUN0QyxRQUFJbkIsTUFBSixDQUFXLE1BQVgsRUFBbUJvQixJQUFuQixDQUF3QkYsR0FBeEI7QUFDRCxHQUZELE1BR0s7QUFDSCxRQUFJbEIsTUFBSixDQUFXUSxHQUFHLENBQUNDLElBQUosQ0FBU0UsUUFBcEIsRUFBNkIsTUFBN0IsRUFBcUNVLE9BQXJDLENBQTZDSCxHQUE3QztBQUNEO0FBQ0YsQ0FYSDtBQWNBZixNQUFNLENBQUNhLElBQVAsQ0FBWSxPQUFaLEVBQ0VkLE1BQU0sQ0FBQztBQUNMRyxFQUFBQSxPQUFPLEVBQUVILE1BQU0sQ0FBQ0ksV0FBUCxDQUFtQjtBQUMxQkMsSUFBQUEsV0FBVyxFQUFFLFVBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQkMsRUFBckIsRUFBeUI7QUFDcENBLE1BQUFBLEVBQUUsQ0FBQyxJQUFELEVBQVEsR0FBRVQsV0FBWSxPQUF0QixDQUFGO0FBQ0QsS0FIeUI7QUFJMUJVLElBQUFBLFFBQVEsRUFBRSxVQUFVSCxHQUFWLEVBQWVDLElBQWYsRUFBcUJDLEVBQXJCLEVBQXlCO0FBQ2pDLFlBQU1DLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxHQUFMLEtBQWEsR0FBYixHQUFtQkosSUFBSSxDQUFDSyxRQUFMLENBQWNDLEtBQWQsQ0FBb0IsQ0FBcEIsQ0FBcEM7QUFDQUwsTUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0MsUUFBUCxDQUFGO0FBQ0Q7QUFQeUIsR0FBbkI7QUFESixDQUFELENBQU4sQ0FVR00sTUFWSCxDQVVVLE1BVlYsRUFVaUIsQ0FWakIsQ0FERixFQVlFLENBQUNULEdBQUQsRUFBS1UsR0FBTCxLQUFXO0FBQ1QsTUFBSSxDQUFDVixHQUFHLENBQUNDLElBQUwsSUFBYUQsR0FBRyxDQUFDQyxJQUFKLENBQVNVLE1BQVQsS0FBb0IsQ0FBckMsRUFBd0M7QUFDdEMsUUFBSW5CLE1BQUosQ0FBVyxNQUFYLEVBQW1Cb0IsSUFBbkIsQ0FBd0JGLEdBQXhCO0FBQ0QsR0FGRCxNQUdLO0FBQ0gsUUFBSWxCLE1BQUosQ0FBV1EsR0FBRyxDQUFDQyxJQUFKLENBQVNFLFFBQXBCLEVBQThCLE1BQTlCLEVBQXNDVSxPQUF0QyxDQUE4Q0gsR0FBOUM7QUFDRDtBQUNGLENBbkJIO0FBc0JBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixNQUFqQiIsInNvdXJjZVJvb3QiOiJHOlxcUHJvamVjdFxcV2ViXFxnaXRcXGhvdXNlaG9sZC1zZXJ2aWNlLXNlcnZlclxcc3JjXFxyb3V0ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IFJlc3VsdCA9IHJlcXVpcmUoJy4uL21vZGVscy9SZXN1bHQnKVxuY29uc3QgeyBVUExPQURfUEFUSCB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnQnKVxuY29uc3QgbXVsdGVyID0gcmVxdWlyZSgnbXVsdGVyJylcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuXG52YXIgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gIGRlc3RpbmF0aW9uOiBmdW5jdGlvbiAocmVxLCBmaWxlLCBjYikge1xuICAgIGNiKG51bGwsIGAke1VQTE9BRF9QQVRIfS9hdmF0YXJgKVxuICB9LFxuICBmaWxlbmFtZTogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcbiAgICBjb25zdCBmaWxlbmFtZSA9IERhdGUubm93KCkrJy4nK2ZpbGUubWltZXR5cGUuc2xpY2UoNilcbiAgICBjYihudWxsLCBmaWxlbmFtZSlcbiAgfVxufSlcblxucm91dGVyLnBvc3QoJy9hdmF0YXInLFxuICBtdWx0ZXIoe1xuICAgIHN0b3JhZ2U6IHN0b3JhZ2VcbiAgfSkuc2luZ2xlKCdmaWxlJyksXG4gIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICAgIGlmICghcmVxLmZpbGUgfHwgcmVxLmZpbGUubGVuZ3RoID09PSAwKSB7XG4gICAgICBuZXcgUmVzdWx0KCfkuIrkvKDlpLHotKUnKS5mYWlsKHJlcylcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBuZXcgUmVzdWx0KHJlcS5maWxlLmZpbGVuYW1lLCfkuIrkvKDmiJDlip8nKS5zdWNjZXNzKHJlcylcbiAgICB9XG4gIH1cbilcblxucm91dGVyLnBvc3QoJy9zaG93JyxcbiAgbXVsdGVyKHtcbiAgICBzdG9yYWdlOiBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xuICAgICAgZGVzdGluYXRpb246IGZ1bmN0aW9uIChyZXEsIGZpbGUsIGNiKSB7XG4gICAgICAgIGNiKG51bGwsIGAke1VQTE9BRF9QQVRIfS9zaG93YClcbiAgICAgIH0sXG4gICAgICBmaWxlbmFtZTogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcbiAgICAgICAgY29uc3QgZmlsZW5hbWUgPSBEYXRlLm5vdygpICsgJy4nICsgZmlsZS5taW1ldHlwZS5zbGljZSg2KVxuICAgICAgICBjYihudWxsLCBmaWxlbmFtZSlcbiAgICAgIH1cbiAgICB9KVxuICB9KS5zaW5nbGUoJ2ZpbGUnLDQpLFxuICAocmVxLHJlcyk9PntcbiAgICBpZiAoIXJlcS5maWxlIHx8IHJlcS5maWxlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgbmV3IFJlc3VsdCgn5LiK5Lyg5aSx6LSlJykuZmFpbChyZXMpXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgbmV3IFJlc3VsdChyZXEuZmlsZS5maWxlbmFtZSwgJ+S4iuS8oOaIkOWKnycpLnN1Y2Nlc3MocmVzKVxuICAgIH1cbiAgfVxuKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "upload.js"
      ],
      "names": [
        "express",
        "require",
        "Result",
        "UPLOAD_PATH",
        "multer",
        "router",
        "Router",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "filename",
        "Date",
        "now",
        "mimetype",
        "slice",
        "post",
        "single",
        "res",
        "length",
        "fail",
        "success",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAkBF,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMI,MAAM,GAAGL,OAAO,CAACM,MAAR,EAAf;AAEA,IAAIC,OAAO,GAAGH,MAAM,CAACI,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAE,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACpCA,IAAAA,EAAE,CAAC,IAAD,EAAQ,GAAET,WAAY,SAAtB,CAAF;AACD,GAH8B;AAI/BU,EAAAA,QAAQ,EAAE,UAAUH,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACjC,UAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,KAAW,GAAX,GAAeJ,IAAI,CAACK,QAAL,CAAcC,KAAd,CAAoB,CAApB,CAAhC;AACAL,IAAAA,EAAE,CAAC,IAAD,EAAOC,QAAP,CAAF;AACD;AAP8B,CAAnB,CAAd;AAUAR,MAAM,CAACa,IAAP,CAAY,SAAZ,EACEd,MAAM,CAAC;AACLG,EAAAA,OAAO,EAAEA;AADJ,CAAD,CAAN,CAEGY,MAFH,CAEU,MAFV,CADF,EAIE,UAAUT,GAAV,EAAeU,GAAf,EAAoB;AAClB,MAAI,CAACV,GAAG,CAACC,IAAL,IAAaD,GAAG,CAACC,IAAJ,CAASU,MAAT,KAAoB,CAArC,EAAwC;AACtC,QAAInB,MAAJ,CAAW,MAAX,EAAmBoB,IAAnB,CAAwBF,GAAxB;AACD,GAFD,MAGK;AACH,QAAIlB,MAAJ,CAAWQ,GAAG,CAACC,IAAJ,CAASE,QAApB,EAA6B,MAA7B,EAAqCU,OAArC,CAA6CH,GAA7C;AACD;AACF,CAXH;AAcAf,MAAM,CAACa,IAAP,CAAY,OAAZ,EACEd,MAAM,CAAC;AACLG,EAAAA,OAAO,EAAEH,MAAM,CAACI,WAAP,CAAmB;AAC1BC,IAAAA,WAAW,EAAE,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACpCA,MAAAA,EAAE,CAAC,IAAD,EAAQ,GAAET,WAAY,OAAtB,CAAF;AACD,KAHyB;AAI1BU,IAAAA,QAAQ,EAAE,UAAUH,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACjC,YAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,KAAa,GAAb,GAAmBJ,IAAI,CAACK,QAAL,CAAcC,KAAd,CAAoB,CAApB,CAApC;AACAL,MAAAA,EAAE,CAAC,IAAD,EAAOC,QAAP,CAAF;AACD;AAPyB,GAAnB;AADJ,CAAD,CAAN,CAUGM,MAVH,CAUU,MAVV,EAUiB,CAVjB,CADF,EAYE,CAACT,GAAD,EAAKU,GAAL,KAAW;AACT,MAAI,CAACV,GAAG,CAACC,IAAL,IAAaD,GAAG,CAACC,IAAJ,CAASU,MAAT,KAAoB,CAArC,EAAwC;AACtC,QAAInB,MAAJ,CAAW,MAAX,EAAmBoB,IAAnB,CAAwBF,GAAxB;AACD,GAFD,MAGK;AACH,QAAIlB,MAAJ,CAAWQ,GAAG,CAACC,IAAJ,CAASE,QAApB,EAA8B,MAA9B,EAAsCU,OAAtC,CAA8CH,GAA9C;AACD;AACF,CAnBH;AAsBAI,MAAM,CAACC,OAAP,GAAiBpB,MAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "sourcesContent": [
        "const express = require('express')\nconst Result = require('../models/Result')\nconst { UPLOAD_PATH } = require('../utils/constant')\nconst multer = require('multer')\n\nconst router = express.Router()\n\nvar storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, `${UPLOAD_PATH}/avatar`)\n  },\n  filename: function (req, file, cb) {\n    const filename = Date.now()+'.'+file.mimetype.slice(6)\n    cb(null, filename)\n  }\n})\n\nrouter.post('/avatar',\n  multer({\n    storage: storage\n  }).single('file'),\n  function (req, res) {\n    if (!req.file || req.file.length === 0) {\n      new Result('上传失败').fail(res)\n    }\n    else {\n      new Result(req.file.filename,'上传成功').success(res)\n    }\n  }\n)\n\nrouter.post('/show',\n  multer({\n    storage: multer.diskStorage({\n      destination: function (req, file, cb) {\n        cb(null, `${UPLOAD_PATH}/show`)\n      },\n      filename: function (req, file, cb) {\n        const filename = Date.now() + '.' + file.mimetype.slice(6)\n        cb(null, filename)\n      }\n    })\n  }).single('file',4),\n  (req,res)=>{\n    if (!req.file || req.file.length === 0) {\n      new Result('上传失败').fail(res)\n    }\n    else {\n      new Result(req.file.filename, '上传成功').success(res)\n    }\n  }\n)\n\nmodule.exports = router\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1587474629159
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\class.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\class.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\class.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\class.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
        "sourceFileName": "class.js"
      }
    },
    "ast": null,
    "code": "const Result = require('../models/Result');\n\nconst express = require('express');\n\nconst {\n  list\n} = require('../service/class');\n\nconst router = express.Router();\nrouter.get('/list', (req, res) => {\n  list().then(result => {\n    if (result) {\n      new Result(result, '查询成功').success(res);\n    } else new Result('查询失败').fail(res);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYXNzLmpzIl0sIm5hbWVzIjpbIlJlc3VsdCIsInJlcXVpcmUiLCJleHByZXNzIiwibGlzdCIsInJvdXRlciIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsInRoZW4iLCJyZXN1bHQiLCJzdWNjZXNzIiwiZmFpbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUNBLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQTtBQUFGLElBQVdGLE9BQU8sQ0FBQyxrQkFBRCxDQUF4Qjs7QUFFQSxNQUFNRyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBRUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLE9BQVgsRUFBb0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDaENMLEVBQUFBLElBQUksR0FBR00sSUFBUCxDQUFZQyxNQUFNLElBQUk7QUFDcEIsUUFBSUEsTUFBSixFQUFZO0FBQ1YsVUFBSVYsTUFBSixDQUFXVSxNQUFYLEVBQWtCLE1BQWxCLEVBQTBCQyxPQUExQixDQUFrQ0gsR0FBbEM7QUFDRCxLQUZELE1BSUUsSUFBSVIsTUFBSixDQUFXLE1BQVgsRUFBbUJZLElBQW5CLENBQXdCSixHQUF4QjtBQUVILEdBUEQ7QUFRRCxDQVREO0FBV0FLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFlVixNQUFmIiwic291cmNlUm9vdCI6Ikc6XFxQcm9qZWN0XFxXZWJcXGdpdFxcaG91c2Vob2xkLXNlcnZpY2Utc2VydmVyXFxzcmNcXHJvdXRlclxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVzdWx0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1Jlc3VsdCcpXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCB7IGxpc3QgfSA9IHJlcXVpcmUoJy4uL3NlcnZpY2UvY2xhc3MnKVxuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnJvdXRlci5nZXQoJy9saXN0JywgKHJlcSwgcmVzKSA9PiB7XG4gIGxpc3QoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgaWYgKHJlc3VsdCkge1xuICAgICAgbmV3IFJlc3VsdChyZXN1bHQsJ+afpeivouaIkOWKnycpLnN1Y2Nlc3MocmVzKVxuICAgIH1cbiAgICBlbHNlXG4gICAgICBuZXcgUmVzdWx0KCfmn6Xor6LlpLHotKUnKS5mYWlsKHJlcylcblxuICB9KVxufSlcblxubW9kdWxlLmV4cG9ydHM9cm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "class.js"
      ],
      "names": [
        "Result",
        "require",
        "express",
        "list",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "then",
        "result",
        "success",
        "fail",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAWF,OAAO,CAAC,kBAAD,CAAxB;;AAEA,MAAMG,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEAD,MAAM,CAACE,GAAP,CAAW,OAAX,EAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChCL,EAAAA,IAAI,GAAGM,IAAP,CAAYC,MAAM,IAAI;AACpB,QAAIA,MAAJ,EAAY;AACV,UAAIV,MAAJ,CAAWU,MAAX,EAAkB,MAAlB,EAA0BC,OAA1B,CAAkCH,GAAlC;AACD,KAFD,MAIE,IAAIR,MAAJ,CAAW,MAAX,EAAmBY,IAAnB,CAAwBJ,GAAxB;AAEH,GAPD;AAQD,CATD;AAWAK,MAAM,CAACC,OAAP,GAAeV,MAAf",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "sourcesContent": [
        "const Result = require('../models/Result')\nconst express = require('express')\nconst { list } = require('../service/class')\n\nconst router = express.Router()\n\nrouter.get('/list', (req, res) => {\n  list().then(result => {\n    if (result) {\n      new Result(result,'查询成功').success(res)\n    }\n    else\n      new Result('查询失败').fail(res)\n\n  })\n})\n\nmodule.exports=router"
      ]
    },
    "sourceType": "module",
    "mtime": 1587439275005
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\class.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\class.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\class.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\class.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
        "sourceFileName": "class.js"
      }
    },
    "ast": null,
    "code": "const {\n  querySql\n} = require('../mysql');\n\nfunction list() {\n  const sql = 'select * from class';\n  return querySql(sql);\n}\n\nmodule.exports = {\n  list\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYXNzLmpzIl0sIm5hbWVzIjpbInF1ZXJ5U3FsIiwicmVxdWlyZSIsImxpc3QiLCJzcWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQUVBLEVBQUFBO0FBQUYsSUFBZUMsT0FBTyxDQUFDLFVBQUQsQ0FBNUI7O0FBRUEsU0FBU0MsSUFBVCxHQUFnQjtBQUNkLFFBQU1DLEdBQUcsR0FBRyxxQkFBWjtBQUNBLFNBQU9ILFFBQVEsQ0FBQ0csR0FBRCxDQUFmO0FBQ0Q7O0FBRURDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFlO0FBQ2JILEVBQUFBO0FBRGEsQ0FBZiIsInNvdXJjZVJvb3QiOiJHOlxcUHJvamVjdFxcV2ViXFxnaXRcXGhvdXNlaG9sZC1zZXJ2aWNlLXNlcnZlclxcc3JjXFxzZXJ2aWNlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHF1ZXJ5U3FsIH0gPSByZXF1aXJlKCcuLi9teXNxbCcpO1xuXG5mdW5jdGlvbiBsaXN0KCkge1xuICBjb25zdCBzcWwgPSAnc2VsZWN0ICogZnJvbSBjbGFzcydcbiAgcmV0dXJuIHF1ZXJ5U3FsKHNxbClcbn1cblxubW9kdWxlLmV4cG9ydHM9e1xuICBsaXN0XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "class.js"
      ],
      "names": [
        "querySql",
        "require",
        "list",
        "sql",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,OAAO,CAAC,UAAD,CAA5B;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAMC,GAAG,GAAG,qBAAZ;AACA,SAAOH,QAAQ,CAACG,GAAD,CAAf;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAe;AACbH,EAAAA;AADa,CAAf",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "sourcesContent": [
        "const { querySql } = require('../mysql');\n\nfunction list() {\n  const sql = 'select * from class'\n  return querySql(sql)\n}\n\nmodule.exports={\n  list\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1587438817627
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\router\\\\commodity.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\commodity.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\commodity.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\commodity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
        "sourceFileName": "commodity.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst Result = require('../models/Result');\n\nconst {\n  create,\n  list,\n  update,\n  remove\n} = require('../service/commodity');\n\nconst {\n  increase\n} = require('../utils/auto-increase');\n\nconst router = express.Router();\nrouter.post('/create', (req, res) => {\n  const {\n    name,\n    price,\n    describe\n  } = req.body;\n  const className = req.body.class;\n  const show = req.body.show.toString();\n  const staffID = req.body.staff.toString();\n  list().then(result => {\n    const data = new Result(result, '查询成功').data;\n    create(increase(data, 'commodityID'), name, className, price, show, describe, staffID).then(answer => {\n      if (answer) {\n        new Result('新增商品成功').success(res);\n      } else {\n        new Result('新增商品失败').fail(res);\n      }\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vZGl0eS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIlJlc3VsdCIsImNyZWF0ZSIsImxpc3QiLCJ1cGRhdGUiLCJyZW1vdmUiLCJpbmNyZWFzZSIsInJvdXRlciIsIlJvdXRlciIsInBvc3QiLCJyZXEiLCJyZXMiLCJuYW1lIiwicHJpY2UiLCJkZXNjcmliZSIsImJvZHkiLCJjbGFzc05hbWUiLCJjbGFzcyIsInNob3ciLCJ0b1N0cmluZyIsInN0YWZmSUQiLCJzdGFmZiIsInRoZW4iLCJyZXN1bHQiLCJkYXRhIiwiYW5zd2VyIiwic3VjY2VzcyIsImZhaWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUNBLE1BQU07QUFBRUUsRUFBQUEsTUFBRjtBQUFVQyxFQUFBQSxJQUFWO0FBQWdCQyxFQUFBQSxNQUFoQjtBQUF3QkMsRUFBQUE7QUFBeEIsSUFBbUNMLE9BQU8sQ0FBQyxzQkFBRCxDQUFoRDs7QUFDQSxNQUFNO0FBQUVNLEVBQUFBO0FBQUYsSUFBZU4sT0FBTyxDQUFDLHdCQUFELENBQTVCOztBQUVBLE1BQU1PLE1BQU0sR0FBR1IsT0FBTyxDQUFDUyxNQUFSLEVBQWY7QUFFQUQsTUFBTSxDQUFDRSxJQUFQLENBQVksU0FBWixFQUF1QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNuQyxRQUFNO0FBQUVDLElBQUFBLElBQUY7QUFBUUMsSUFBQUEsS0FBUjtBQUFlQyxJQUFBQTtBQUFmLE1BQTRCSixHQUFHLENBQUNLLElBQXRDO0FBQ0EsUUFBTUMsU0FBUyxHQUFHTixHQUFHLENBQUNLLElBQUosQ0FBU0UsS0FBM0I7QUFDQSxRQUFNQyxJQUFJLEdBQUdSLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRyxJQUFULENBQWNDLFFBQWQsRUFBYjtBQUNBLFFBQU1DLE9BQU8sR0FBR1YsR0FBRyxDQUFDSyxJQUFKLENBQVNNLEtBQVQsQ0FBZUYsUUFBZixFQUFoQjtBQUNBaEIsRUFBQUEsSUFBSSxHQUFHbUIsSUFBUCxDQUFZQyxNQUFNLElBQUk7QUFDcEIsVUFBTUMsSUFBSSxHQUFHLElBQUl2QixNQUFKLENBQVdzQixNQUFYLEVBQW1CLE1BQW5CLEVBQTJCQyxJQUF4QztBQUNBdEIsSUFBQUEsTUFBTSxDQUFDSSxRQUFRLENBQUNrQixJQUFELEVBQU8sYUFBUCxDQUFULEVBQWdDWixJQUFoQyxFQUFzQ0ksU0FBdEMsRUFBaURILEtBQWpELEVBQXdESyxJQUF4RCxFQUE4REosUUFBOUQsRUFBd0VNLE9BQXhFLENBQU4sQ0FBdUZFLElBQXZGLENBQTRGRyxNQUFNLElBQUk7QUFDcEcsVUFBSUEsTUFBSixFQUFZO0FBQ1YsWUFBSXhCLE1BQUosQ0FBVyxRQUFYLEVBQXFCeUIsT0FBckIsQ0FBNkJmLEdBQTdCO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsWUFBSVYsTUFBSixDQUFXLFFBQVgsRUFBcUIwQixJQUFyQixDQUEwQmhCLEdBQTFCO0FBQ0Q7QUFDRixLQU5EO0FBT0QsR0FURDtBQVVELENBZkQ7QUFpQkFpQixNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QixNQUFqQiIsInNvdXJjZVJvb3QiOiJHOlxcUHJvamVjdFxcV2ViXFxnaXRcXGhvdXNlaG9sZC1zZXJ2aWNlLXNlcnZlclxcc3JjXFxyb3V0ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IFJlc3VsdCA9IHJlcXVpcmUoJy4uL21vZGVscy9SZXN1bHQnKVxuY29uc3QgeyBjcmVhdGUsIGxpc3QsIHVwZGF0ZSwgcmVtb3ZlIH0gPSByZXF1aXJlKCcuLi9zZXJ2aWNlL2NvbW1vZGl0eScpXG5jb25zdCB7IGluY3JlYXNlIH0gPSByZXF1aXJlKCcuLi91dGlscy9hdXRvLWluY3JlYXNlJylcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuXG5yb3V0ZXIucG9zdCgnL2NyZWF0ZScsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IG5hbWUsIHByaWNlLCBkZXNjcmliZSB9ID0gcmVxLmJvZHlcbiAgY29uc3QgY2xhc3NOYW1lID0gcmVxLmJvZHkuY2xhc3NcbiAgY29uc3Qgc2hvdyA9IHJlcS5ib2R5LnNob3cudG9TdHJpbmcoKVxuICBjb25zdCBzdGFmZklEID0gcmVxLmJvZHkuc3RhZmYudG9TdHJpbmcoKVxuICBsaXN0KCkudGhlbihyZXN1bHQgPT4ge1xuICAgIGNvbnN0IGRhdGEgPSBuZXcgUmVzdWx0KHJlc3VsdCwgJ+afpeivouaIkOWKnycpLmRhdGFcbiAgICBjcmVhdGUoaW5jcmVhc2UoZGF0YSwgJ2NvbW1vZGl0eUlEJyksIG5hbWUsIGNsYXNzTmFtZSwgcHJpY2UsIHNob3csIGRlc2NyaWJlLCBzdGFmZklEKS50aGVuKGFuc3dlciA9PiB7XG4gICAgICBpZiAoYW5zd2VyKSB7XG4gICAgICAgIG5ldyBSZXN1bHQoJ+aWsOWinuWVhuWTgeaIkOWKnycpLnN1Y2Nlc3MocmVzKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3IFJlc3VsdCgn5paw5aKe5ZWG5ZOB5aSx6LSlJykuZmFpbChyZXMpXG4gICAgICB9XG4gICAgfSlcbiAgfSlcbn0pXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "commodity.js"
      ],
      "names": [
        "express",
        "require",
        "Result",
        "create",
        "list",
        "update",
        "remove",
        "increase",
        "router",
        "Router",
        "post",
        "req",
        "res",
        "name",
        "price",
        "describe",
        "body",
        "className",
        "class",
        "show",
        "toString",
        "staffID",
        "staff",
        "then",
        "result",
        "data",
        "answer",
        "success",
        "fail",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAM;AAAEE,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA;AAAxB,IAAmCL,OAAO,CAAC,sBAAD,CAAhD;;AACA,MAAM;AAAEM,EAAAA;AAAF,IAAeN,OAAO,CAAC,wBAAD,CAA5B;;AAEA,MAAMO,MAAM,GAAGR,OAAO,CAACS,MAAR,EAAf;AAEAD,MAAM,CAACE,IAAP,CAAY,SAAZ,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA4BJ,GAAG,CAACK,IAAtC;AACA,QAAMC,SAAS,GAAGN,GAAG,CAACK,IAAJ,CAASE,KAA3B;AACA,QAAMC,IAAI,GAAGR,GAAG,CAACK,IAAJ,CAASG,IAAT,CAAcC,QAAd,EAAb;AACA,QAAMC,OAAO,GAAGV,GAAG,CAACK,IAAJ,CAASM,KAAT,CAAeF,QAAf,EAAhB;AACAhB,EAAAA,IAAI,GAAGmB,IAAP,CAAYC,MAAM,IAAI;AACpB,UAAMC,IAAI,GAAG,IAAIvB,MAAJ,CAAWsB,MAAX,EAAmB,MAAnB,EAA2BC,IAAxC;AACAtB,IAAAA,MAAM,CAACI,QAAQ,CAACkB,IAAD,EAAO,aAAP,CAAT,EAAgCZ,IAAhC,EAAsCI,SAAtC,EAAiDH,KAAjD,EAAwDK,IAAxD,EAA8DJ,QAA9D,EAAwEM,OAAxE,CAAN,CAAuFE,IAAvF,CAA4FG,MAAM,IAAI;AACpG,UAAIA,MAAJ,EAAY;AACV,YAAIxB,MAAJ,CAAW,QAAX,EAAqByB,OAArB,CAA6Bf,GAA7B;AACD,OAFD,MAEO;AACL,YAAIV,MAAJ,CAAW,QAAX,EAAqB0B,IAArB,CAA0BhB,GAA1B;AACD;AACF,KAND;AAOD,GATD;AAUD,CAfD;AAiBAiB,MAAM,CAACC,OAAP,GAAiBtB,MAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\router\\",
      "sourcesContent": [
        "const express = require('express')\nconst Result = require('../models/Result')\nconst { create, list, update, remove } = require('../service/commodity')\nconst { increase } = require('../utils/auto-increase')\n\nconst router = express.Router()\n\nrouter.post('/create', (req, res) => {\n  const { name, price, describe } = req.body\n  const className = req.body.class\n  const show = req.body.show.toString()\n  const staffID = req.body.staff.toString()\n  list().then(result => {\n    const data = new Result(result, '查询成功').data\n    create(increase(data, 'commodityID'), name, className, price, show, describe, staffID).then(answer => {\n      if (answer) {\n        new Result('新增商品成功').success(res)\n      } else {\n        new Result('新增商品失败').fail(res)\n      }\n    })\n  })\n})\n\nmodule.exports = router"
      ]
    },
    "sourceType": "module",
    "mtime": 1587477905287
  },
  "{\"sourceRoot\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"filename\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\\\\src\\\\service\\\\commodity.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"G:\\\\Project\\\\Web\\\\git\\\\household-service-server\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "G:\\Project\\Web\\git\\household-service-server",
      "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\commodity.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "G:\\Project\\Web\\git\\household-service-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\commodity.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\commodity.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
        "sourceFileName": "commodity.js"
      }
    },
    "ast": null,
    "code": "const {\n  querySql\n} = require('../mysql');\n\nfunction create(commodityID, name, className, price, show, describe, staffID) {\n  const sql = `insert into commodity(commodityID,\\`name\\`,class,price,\\`show\\`,\\`describe\\`,staffID) \n  values('${commodityID}','${name}','${className}','${price}','${show}','${describe}','${staffID}')`;\n  console.log(sql);\n  return querySql(sql);\n}\n\nfunction list() {\n  const sql = 'select * from commodity';\n  return querySql(sql);\n}\n\nmodule.exports = {\n  create,\n  list\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vZGl0eS5qcyJdLCJuYW1lcyI6WyJxdWVyeVNxbCIsInJlcXVpcmUiLCJjcmVhdGUiLCJjb21tb2RpdHlJRCIsIm5hbWUiLCJjbGFzc05hbWUiLCJwcmljZSIsInNob3ciLCJkZXNjcmliZSIsInN0YWZmSUQiLCJzcWwiLCJjb25zb2xlIiwibG9nIiwibGlzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFlQyxPQUFPLENBQUMsVUFBRCxDQUE1Qjs7QUFFQSxTQUFTQyxNQUFULENBQWdCQyxXQUFoQixFQUE0QkMsSUFBNUIsRUFBa0NDLFNBQWxDLEVBQTZDQyxLQUE3QyxFQUFvREMsSUFBcEQsRUFBMERDLFFBQTFELEVBQW9FQyxPQUFwRSxFQUE2RTtBQUMzRSxRQUFNQyxHQUFHLEdBQUk7WUFDSFAsV0FBWSxNQUFLQyxJQUFLLE1BQUtDLFNBQVUsTUFBS0MsS0FBTSxNQUFLQyxJQUFLLE1BQUtDLFFBQVMsTUFBS0MsT0FBUSxJQUQvRjtBQUVBRSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsR0FBWjtBQUNBLFNBQU9WLFFBQVEsQ0FBQ1UsR0FBRCxDQUFmO0FBQ0Q7O0FBRUQsU0FBU0csSUFBVCxHQUFnQjtBQUNkLFFBQU1ILEdBQUcsR0FBRyx5QkFBWjtBQUNBLFNBQU9WLFFBQVEsQ0FBQ1UsR0FBRCxDQUFmO0FBQ0Q7O0FBRURJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmYixFQUFBQSxNQURlO0FBQ1BXLEVBQUFBO0FBRE8sQ0FBakIiLCJzb3VyY2VSb290IjoiRzpcXFByb2plY3RcXFdlYlxcZ2l0XFxob3VzZWhvbGQtc2VydmljZS1zZXJ2ZXJcXHNyY1xcc2VydmljZVxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBxdWVyeVNxbCB9ID0gcmVxdWlyZSgnLi4vbXlzcWwnKTtcblxuZnVuY3Rpb24gY3JlYXRlKGNvbW1vZGl0eUlELG5hbWUsIGNsYXNzTmFtZSwgcHJpY2UsIHNob3csIGRlc2NyaWJlLCBzdGFmZklEKSB7XG4gIGNvbnN0IHNxbCA9IGBpbnNlcnQgaW50byBjb21tb2RpdHkoY29tbW9kaXR5SUQsXFxgbmFtZVxcYCxjbGFzcyxwcmljZSxcXGBzaG93XFxgLFxcYGRlc2NyaWJlXFxgLHN0YWZmSUQpIFxuICB2YWx1ZXMoJyR7Y29tbW9kaXR5SUR9JywnJHtuYW1lfScsJyR7Y2xhc3NOYW1lfScsJyR7cHJpY2V9JywnJHtzaG93fScsJyR7ZGVzY3JpYmV9JywnJHtzdGFmZklEfScpYFxuICBjb25zb2xlLmxvZyhzcWwpXG4gIHJldHVybiBxdWVyeVNxbChzcWwpXG59XG5cbmZ1bmN0aW9uIGxpc3QoKSB7XG4gIGNvbnN0IHNxbCA9ICdzZWxlY3QgKiBmcm9tIGNvbW1vZGl0eSdcbiAgcmV0dXJuIHF1ZXJ5U3FsKHNxbClcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZSwgbGlzdFxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "commodity.js"
      ],
      "names": [
        "querySql",
        "require",
        "create",
        "commodityID",
        "name",
        "className",
        "price",
        "show",
        "describe",
        "staffID",
        "sql",
        "console",
        "log",
        "list",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,OAAO,CAAC,UAAD,CAA5B;;AAEA,SAASC,MAAT,CAAgBC,WAAhB,EAA4BC,IAA5B,EAAkCC,SAAlC,EAA6CC,KAA7C,EAAoDC,IAApD,EAA0DC,QAA1D,EAAoEC,OAApE,EAA6E;AAC3E,QAAMC,GAAG,GAAI;YACHP,WAAY,MAAKC,IAAK,MAAKC,SAAU,MAAKC,KAAM,MAAKC,IAAK,MAAKC,QAAS,MAAKC,OAAQ,IAD/F;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,SAAOV,QAAQ,CAACU,GAAD,CAAf;AACD;;AAED,SAASG,IAAT,GAAgB;AACd,QAAMH,GAAG,GAAG,yBAAZ;AACA,SAAOV,QAAQ,CAACU,GAAD,CAAf;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AACfb,EAAAA,MADe;AACPW,EAAAA;AADO,CAAjB",
      "sourceRoot": "G:\\Project\\Web\\git\\household-service-server\\src\\service\\",
      "sourcesContent": [
        "const { querySql } = require('../mysql');\n\nfunction create(commodityID,name, className, price, show, describe, staffID) {\n  const sql = `insert into commodity(commodityID,\\`name\\`,class,price,\\`show\\`,\\`describe\\`,staffID) \n  values('${commodityID}','${name}','${className}','${price}','${show}','${describe}','${staffID}')`\n  console.log(sql)\n  return querySql(sql)\n}\n\nfunction list() {\n  const sql = 'select * from commodity'\n  return querySql(sql)\n}\n\nmodule.exports = {\n  create, list\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1587479766935
  }
}